{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\demo-react\\\\src\\\\component\\\\test\\\\Test.js\";\nimport React, { Component } from 'react';\nimport './Test.css';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\n\nvar CardBack = require('../test/cards-png/red_back.png');\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      imageA1: '',\n      imageA2: '',\n      imageA3: '',\n      imageB1: '',\n      imageB2: '',\n      imageB3: '',\n      imageC1: '',\n      imageC2: '',\n      imageC3: '',\n      imageD1: '',\n      imageD2: '',\n      imageD3: '',\n      cardA1: '',\n      cardA2: '',\n      cardA3: '',\n      cardB1: '',\n      cardB2: '',\n      cardB3: '',\n      cardC1: '',\n      cardC2: '',\n      cardC3: '',\n      cardD1: '',\n      cardD2: '',\n      cardD3: '',\n      handRank: [],\n      winner: []\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n  }\n\n  handleResult() {\n    var orderA = this.arrangeOrder(\"A\");\n    var orderB = this.arrangeOrder(\"B\");\n    var orderC = this.arrangeOrder(\"C\");\n    var orderD = this.arrangeOrder(\"D\");\n    var handRanking = [];\n    handRanking.push(this.giveHandRanking(orderA));\n    handRanking.push(this.giveHandRanking(orderB));\n    handRanking.push(this.giveHandRanking(orderC));\n    handRanking.push(this.giveHandRanking(orderD));\n    var sortedRank = handRanking.sort((a, b) => a - b);\n    console.log(sortedRank);\n    var winArr = [];\n\n    if (sortedRank[0] === 1) {\n      var max = 2;\n\n      if (orderA[0] >= max) {\n        max = orderA[0];\n        winArr = [];\n        winArr = winArr.push('A');\n      }\n\n      if (orderB[0] >= max) {\n        max = orderB[0];\n        winArr = [];\n        winArr = winArr.push('B');\n      }\n\n      if (orderC[0] >= max) {\n        max = orderC[0];\n        winArr = [];\n        winArr = winArr.push('C');\n      }\n\n      if (orderD[0] >= max) {\n        max = orderD[0];\n        winArr = [];\n        winArr = winArr.push('D');\n      }\n    } else if (sortedRank[0] === 2) {\n      var max = 4;\n\n      if (orderA[0] >= max) {\n        max = orderA[0];\n        winArr = [];\n        winArr = winArr.push('A');\n      }\n\n      if (orderB[0] > max) {\n        max = orderB[0];\n        winArr = [];\n        winArr = winArr.push('B');\n      } else if (orderB[0] === max) {\n        winArr = winArr.push('B');\n      }\n\n      if (orderC[0] > max) {\n        max = orderC[0];\n        winArr = [];\n        winArr = winArr.push('C');\n      } else if (orderC[0] === max) {\n        winArr = winArr.push('C');\n        this.setState({\n          winner: winArr\n        });\n      }\n\n      if (orderD[0] >= max) {\n        max = orderD[0];\n        winArr = [];\n        winArr = winArr.push('D');\n      } else if (orderD[0] === max) {\n        winArr = winArr.push('D');\n      }\n    } else if (sortedRank[0] === 3) {\n      var max = 2; //last index of the order\n\n      var maxL = orderA[2];\n\n      if (orderA[0] >= max) {\n        max = orderA[0];\n        winArr = [];\n        winArr = winArr.concat('A');\n      }\n\n      if (orderB[0] > max) {\n        max = orderB[0];\n        maxL = orderB[2];\n        winArr = [];\n        winArr = winArr.push('B');\n      } else if (orderB[0] === max && orderB[2] === maxL) {\n        winArr = winArr.push('B');\n      } else if (orderB[0] === max && orderB[2] > maxL) {\n        maxL = orderB[2];\n        winArr = [];\n        winArr = winArr.push('B');\n      }\n\n      if (orderC[0] > max) {\n        max = orderC[0];\n        maxL = orderC[2];\n        winArr = [];\n        winArr = winArr.push('C');\n      } else if (orderC[0] === max && orderC[2] === maxL) {\n        winArr = winArr.push('C');\n      } else if (orderC[0] === max && orderC[2] > maxL) {\n        maxL = orderC[2];\n        winArr = [];\n        winArr = winArr.push('C');\n      }\n\n      if (orderD[0] > max) {\n        max = orderD[0];\n        maxL = orderD[2];\n        winArr = [];\n        winArr = winArr.push('D');\n      } else if (orderD[0] === max && orderD[2] === maxL) {\n        winArr = winArr.push('D');\n        this.setState({\n          winner: winArr\n        });\n      } else if (orderD[0] === max && orderD[2] > maxL) {\n        maxL = orderD[2];\n        winArr = [];\n        winArr = winArr.push('D');\n      }\n    } else if (sortedRank[0] === 4) {\n      var max = 2;\n      var maxM = orderA[1];\n      var maxL = orderA[2];\n\n      if (orderA[0] >= max) {\n        max = orderA[0];\n        winArr = [];\n        winArr = winArr.push('A');\n      }\n\n      if (orderB[0] > max) {\n        max = orderB[0];\n        maxM = orderB[1];\n        maxL = orderB[2];\n        winArr = [];\n        winArr = winArr.push('B');\n      } else if (orderB[0] === max && orderB[1] > maxM) {\n        max = orderB[0];\n        maxM = orderB[1];\n        maxL = orderB[2];\n        winArr = [];\n        winArr = winArr.push('B');\n      } else if (orderB[0] === max && orderB[1] === maxM && orderB[2] > maxL) {\n        max = orderB[0];\n        maxM = orderB[1];\n        maxL = orderB[2];\n        winArr = [];\n        winArr = winArr.push('B');\n      } else if (orderB[0] === max && orderB[1] === maxM && orderB[2] === maxL) {\n        winArr = winArr.push('B');\n      }\n\n      if (orderC[0] > max) {\n        max = orderC[0];\n        maxM = orderC[1];\n        maxL = orderC[2];\n        winArr = [];\n        winArr = winArr.push('C');\n      } else if (orderC[0] === max && orderC[1] > maxM) {\n        max = orderC[0];\n        maxM = orderC[1];\n        maxL = orderC[2];\n        winArr = [];\n        winArr = winArr.push('C');\n      } else if (orderC[0] === max && orderC[1] === maxM && orderC[2] > maxL) {\n        max = orderC[0];\n        maxM = orderC[1];\n        maxL = orderC[2];\n        winArr = [];\n        winArr = winArr.push('C');\n      } else if (orderC[0] === max && orderC[1] === maxM && orderC[2] === maxL) {\n        winArr = winArr.push('C');\n      }\n\n      if (orderD[0] > max) {\n        max = orderD[0];\n        maxM = orderD[1];\n        maxL = orderD[2];\n        winArr = [];\n        winArr = winArr.push('D');\n      } else if (orderD[0] === max && orderD[1] > maxM) {\n        max = orderD[0];\n        maxM = orderD[1];\n        maxL = orderD[2];\n        winArr = [];\n        winArr = winArr.push('D');\n      } else if (orderD[0] === max && orderD[1] === maxM && orderD[2] > maxL) {\n        max = orderD[0];\n        maxM = orderD[1];\n        maxL = orderD[2];\n        winArr = [];\n        winArr = winArr.push('D');\n      } else if (orderD[0] === max && orderD[1] === maxM && orderD[2] === maxL) {\n        winArr = winArr.push('D');\n      }\n    }\n\n    console.log(winArr);\n  } // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\n\n\n  giveHandRanking(order) {\n    console.log(order);\n\n    if (order[0] === order[1] && order[0] === order[2]) {\n      return 1;\n    } else if (order[0] - 1 === order[1] && order[1] - 1 === order[2]) {\n      return 2;\n    } else if (order[0] === order[1] || order[0] === order[2] || order[1] === order[2]) {\n      console.log(\"3\");\n      return 3;\n    } else {\n      console.log(\"4\");\n      return 4;\n    }\n  }\n\n  arrangeOrder(char) {\n    var order = [];\n    var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1;\n    var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2;\n    var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3;\n    order.push(parseInt(card1), parseInt(card2), parseInt(card3));\n    order.sort((a, b) => b - a);\n\n    if (order[0] !== order[1] && order[1] === order[2]) {\n      var card = order.splice(0, 1)[0];\n      order.splice(2, 0, card);\n    }\n\n    return order;\n  }\n\n  getCardValue(card) {\n    let cardMap = new Map([['A', 14], ['K', 13], ['Q', 12], ['J', 11], ['10', 10], ['9', 9], ['8', 8], ['7', 7], ['6', 6], ['5', 5], ['4', 4], ['3', 3], ['2', 2]]);\n    var cardValue = 0;\n\n    if (!card.includes('10')) {\n      cardValue = cardMap.get(card[0]);\n    } else {\n      cardValue = cardMap.get(card.substring(0, 2));\n    }\n\n    return cardValue;\n  }\n\n  distributeCards() {\n    var imageSourceList = ['2C', '2D', '2H', '2S', '3C', '3D', '3H', '3S', '4C', '4D', '4H', '4S', '5C', '5D', '5H', '5S', '6C', '6D', '6H', '6S', '7C', '7D', '7H', '7S', '8C', '8D', '8H', '8S', '9C', '9D', '9H', '9S', '10C', '10D', '10H', '10S', 'JC', 'JD', 'JH', 'JS', 'QC', 'QD', 'QH', 'QS', 'KC', 'KD', 'KH', 'KS', 'AC', 'AD', 'AH', 'AS']; //for seat A\n\n    var randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    var randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA1: require('../test/cards-png/' + randomCard + '.png'),\n      cardA1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA2: require('../test/cards-png/' + randomCard + '.png'),\n      cardA2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA3: require('../test/cards-png/' + randomCard + '.png'),\n      cardA3: this.getCardValue(randomCard)\n    }); //for seat B\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB1: require('../test/cards-png/' + randomCard + '.png'),\n      cardB1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB2: require('../test/cards-png/' + randomCard + '.png'),\n      cardB2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB3: require('../test/cards-png/' + randomCard + '.png'),\n      cardB3: this.getCardValue(randomCard)\n    }); //for seat C\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC1: require('../test/cards-png/' + randomCard + '.png'),\n      cardC1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC2: require('../test/cards-png/' + randomCard + '.png'),\n      cardC2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC3: require('../test/cards-png/' + randomCard + '.png'),\n      cardC3: this.getCardValue(randomCard)\n    }); //for seat D\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD1: require('../test/cards-png/' + randomCard + '.png'),\n      cardD1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD2: require('../test/cards-png/' + randomCard + '.png'),\n      cardD2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD3: require('../test/cards-png/' + randomCard + '.png'),\n      cardD3: this.getCardValue(randomCard)\n    });\n  }\n\n  handleCheck() {\n    this.distributeCards();\n    this.setState({\n      check: true\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      check: false\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        alignItems: \"center\",\n        background: \"#777\"\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleCheck(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleResult(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, \"New Hand\")))));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:\\Project\\demo-react\\src\\component\\test\\Test.js"],"names":["React","Component","Container","Card","Row","Col","CardBack","require","Test","constructor","props","state","check","imageA1","imageA2","imageA3","imageB1","imageB2","imageB3","imageC1","imageC2","imageC3","imageD1","imageD2","imageD3","cardA1","cardA2","cardA3","cardB1","cardB2","cardB3","cardC1","cardC2","cardC3","cardD1","cardD2","cardD3","handRank","winner","handleCheck","bind","handleReset","handleResult","orderA","arrangeOrder","orderB","orderC","orderD","handRanking","push","giveHandRanking","sortedRank","sort","a","b","console","log","winArr","max","setState","maxL","concat","maxM","order","char","card1","card2","card3","parseInt","card","splice","getCardValue","cardMap","Map","cardValue","includes","get","substring","distributeCards","imageSourceList","randomIndex","Math","floor","random","length","randomCard","render","alignItems","background","marginLeft","textAlign","width","height","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './Test.css'\r\nimport { Container, Card, Row, Col } from 'react-bootstrap'\r\nvar CardBack = require('../test/cards-png/red_back.png');\r\n\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            imageA1: '',\r\n            imageA2: '',\r\n            imageA3: '',\r\n            imageB1: '',\r\n            imageB2: '',\r\n            imageB3: '',\r\n            imageC1: '',\r\n            imageC2: '',\r\n            imageC3: '',\r\n            imageD1: '',\r\n            imageD2: '',\r\n            imageD3: '',\r\n            cardA1: '',\r\n            cardA2: '',\r\n            cardA3: '',\r\n            cardB1: '',\r\n            cardB2: '',\r\n            cardB3: '',\r\n            cardC1: '',\r\n            cardC2: '',\r\n            cardC3: '',\r\n            cardD1: '',\r\n            cardD2: '',\r\n            cardD3: '',\r\n            handRank: [],\r\n            winner: [],\r\n        };\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleResult = this.handleResult.bind(this);\r\n    }\r\n\r\n    handleResult() {\r\n        var orderA = this.arrangeOrder(\"A\")\r\n        var orderB = this.arrangeOrder(\"B\")\r\n        var orderC = this.arrangeOrder(\"C\")\r\n        var orderD = this.arrangeOrder(\"D\")\r\n        var handRanking = []\r\n        handRanking.push(this.giveHandRanking(orderA))\r\n        handRanking.push(this.giveHandRanking(orderB))\r\n        handRanking.push(this.giveHandRanking(orderC))\r\n        handRanking.push(this.giveHandRanking(orderD))\r\n        var sortedRank = handRanking.sort((a, b) => a - b)\r\n        console.log(sortedRank)\r\n        var winArr = []\r\n        if (sortedRank[0] === 1) {\r\n            var max = 2\r\n            if (orderA[0] >= max) {\r\n                max = orderA[0]\r\n                winArr = []\r\n                winArr = winArr.push('A')\r\n            }\r\n            if (orderB[0] >= max) {\r\n                max = orderB[0]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            if (orderC[0] >= max) {\r\n                max = orderC[0]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            if (orderD[0] >= max) {\r\n                max = orderD[0]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n        }\r\n        else if (sortedRank[0] === 2) {\r\n            var max = 4\r\n            if (orderA[0] >= max) {\r\n                max = orderA[0]\r\n                winArr = []\r\n                winArr = winArr.push('A')\r\n            }\r\n            if (orderB[0] > max) {\r\n                max = orderB[0]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            else if (orderB[0] === max) {\r\n                winArr = winArr.push('B')\r\n            }\r\n            if (orderC[0] > max) {\r\n                max = orderC[0]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            else if (orderC[0] === max) {\r\n                winArr = winArr.push('C')\r\n                this.setState({ winner: winArr })\r\n            }\r\n            if (orderD[0] >= max) {\r\n                max = orderD[0]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n            else if (orderD[0] === max) {\r\n                winArr = winArr.push('D')\r\n            }\r\n        }\r\n        else if (sortedRank[0] === 3) {\r\n            var max = 2\r\n            //last index of the order\r\n            var maxL = orderA[2]\r\n            if (orderA[0] >= max) {\r\n                max = orderA[0]\r\n                winArr = []\r\n                winArr = winArr.concat('A')\r\n            }\r\n            if (orderB[0] > max) {\r\n                max = orderB[0]\r\n                maxL = orderB[2]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            else if (orderB[0] === max && orderB[2] === maxL) {\r\n                winArr = winArr.push('B')\r\n            }\r\n            else if (orderB[0] === max && orderB[2] > maxL) {\r\n                maxL = orderB[2]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            if (orderC[0] > max) {\r\n                max = orderC[0]\r\n                maxL = orderC[2]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            else if (orderC[0] === max && orderC[2] === maxL) {\r\n                winArr = winArr.push('C')\r\n            }\r\n            else if (orderC[0] === max && orderC[2] > maxL) {\r\n                maxL = orderC[2]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            if (orderD[0] > max) {\r\n                max = orderD[0]\r\n                maxL = orderD[2]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n            else if (orderD[0] === max && orderD[2] === maxL) {\r\n                winArr = winArr.push('D')\r\n                this.setState({ winner: winArr })\r\n            }\r\n            else if (orderD[0] === max && orderD[2] > maxL) {\r\n                maxL = orderD[2]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n        }\r\n        else if (sortedRank[0] === 4) {\r\n            var max = 2\r\n            var maxM = orderA[1]\r\n            var maxL = orderA[2]\r\n            if (orderA[0] >= max) {\r\n                max = orderA[0]\r\n                winArr = []\r\n                winArr = winArr.push('A')\r\n            }\r\n            if (orderB[0] > max) {\r\n                max = orderB[0]\r\n                maxM = orderB[1]\r\n                maxL = orderB[2]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            else if (orderB[0] === max && orderB[1] > maxM) {\r\n                max = orderB[0]\r\n                maxM = orderB[1]\r\n                maxL = orderB[2]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            else if (orderB[0] === max && orderB[1] === maxM && orderB[2] > maxL) {\r\n                max = orderB[0]\r\n                maxM = orderB[1]\r\n                maxL = orderB[2]\r\n                winArr = []\r\n                winArr = winArr.push('B')\r\n            }\r\n            else if (orderB[0] === max && orderB[1] === maxM && orderB[2] === maxL) {\r\n                winArr = winArr.push('B')\r\n            }\r\n            if (orderC[0] > max) {\r\n                max = orderC[0]\r\n                maxM = orderC[1]\r\n                maxL = orderC[2]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            else if (orderC[0] === max && orderC[1] > maxM) {\r\n                max = orderC[0]\r\n                maxM = orderC[1]\r\n                maxL = orderC[2]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            else if (orderC[0] === max && orderC[1] === maxM && orderC[2] > maxL) {\r\n                max = orderC[0]\r\n                maxM = orderC[1]\r\n                maxL = orderC[2]\r\n                winArr = []\r\n                winArr = winArr.push('C')\r\n            }\r\n            else if (orderC[0] === max && orderC[1] === maxM && orderC[2] === maxL) {\r\n                winArr = winArr.push('C')\r\n            }\r\n            if (orderD[0] > max) {\r\n                max = orderD[0]\r\n                maxM = orderD[1]\r\n                maxL = orderD[2]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n            else if (orderD[0] === max && orderD[1] > maxM) {\r\n                max = orderD[0]\r\n                maxM = orderD[1]\r\n                maxL = orderD[2]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n            else if (orderD[0] === max && orderD[1] === maxM && orderD[2] > maxL) {\r\n                max = orderD[0]\r\n                maxM = orderD[1]\r\n                maxL = orderD[2]\r\n                winArr = []\r\n                winArr = winArr.push('D')\r\n            }\r\n            else if (orderD[0] === max && orderD[1] === maxM && orderD[2] === maxL) {\r\n                winArr = winArr.push('D')\r\n            }\r\n        }\r\n        console.log(winArr)\r\n    }\r\n\r\n    // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\r\n    giveHandRanking(order) {\r\n        console.log(order)\r\n        if ((order[0] === order[1]) && (order[0] === order[2])) {\r\n            return 1\r\n        }\r\n        else if (order[0] - 1 === order[1] && order[1] - 1 === order[2]) {\r\n            return 2\r\n        }\r\n        else if ((order[0] === order[1]) || (order[0] === order[2]) || (order[1] === order[2])) {\r\n            console.log(\"3\")\r\n            return 3\r\n        }\r\n        else {\r\n            console.log(\"4\")\r\n            return 4\r\n        }\r\n    }\r\n\r\n    arrangeOrder(char) {\r\n        var order = []\r\n        var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1\r\n        var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2\r\n        var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3\r\n        order.push(parseInt(card1), parseInt(card2), parseInt(card3))\r\n        order.sort((a, b) => b - a)\r\n        if ((order[0] !== order[1]) && (order[1] === order[2])) {\r\n            var card = order.splice(0, 1)[0]\r\n            order.splice(2, 0, card)\r\n        }\r\n        return order;\r\n    }\r\n\r\n    getCardValue(card) {\r\n        let cardMap = new Map([['A', 14], ['K', 13], ['Q', 12], ['J', 11], ['10', 10], ['9', 9], ['8', 8], ['7', 7], ['6', 6], ['5', 5], ['4', 4], ['3', 3], ['2', 2]]);\r\n        var cardValue = 0;\r\n        if (!card.includes('10')) {\r\n            cardValue = cardMap.get(card[0])\r\n        }\r\n        else {\r\n            cardValue = cardMap.get(card.substring(0, 2))\r\n        }\r\n        return cardValue;\r\n    }\r\n\r\n    distributeCards() {\r\n        var imageSourceList = ['2C', '2D', '2H', '2S', '3C', '3D', '3H', '3S', '4C', '4D', '4H', '4S', '5C', '5D', '5H', '5S', '6C', '6D', '6H', '6S', '7C', '7D', '7H', '7S', '8C', '8D', '8H', '8S', '9C', '9D', '9H', '9S', '10C', '10D', '10H', '10S', 'JC', 'JD', 'JH', 'JS', 'QC', 'QD', 'QH', 'QS', 'KC', 'KD', 'KH', 'KS', 'AC', 'AD', 'AH', 'AS']\r\n\r\n        //for seat A\r\n        var randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        var randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA1: require('../test/cards-png/' + randomCard + '.png'), cardA1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA2: require('../test/cards-png/' + randomCard + '.png'), cardA2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA3: require('../test/cards-png/' + randomCard + '.png'), cardA3: this.getCardValue(randomCard) })\r\n\r\n        //for seat B\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB1: require('../test/cards-png/' + randomCard + '.png'), cardB1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB2: require('../test/cards-png/' + randomCard + '.png'), cardB2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB3: require('../test/cards-png/' + randomCard + '.png'), cardB3: this.getCardValue(randomCard) })\r\n\r\n        //for seat C\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC1: require('../test/cards-png/' + randomCard + '.png'), cardC1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC2: require('../test/cards-png/' + randomCard + '.png'), cardC2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC3: require('../test/cards-png/' + randomCard + '.png'), cardC3: this.getCardValue(randomCard) })\r\n\r\n        //for seat D\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD1: require('../test/cards-png/' + randomCard + '.png'), cardD1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD2: require('../test/cards-png/' + randomCard + '.png'), cardD2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD3: require('../test/cards-png/' + randomCard + '.png'), cardD3: this.getCardValue(randomCard) })\r\n    }\r\n\r\n    handleCheck() {\r\n        this.distributeCards()\r\n        this.setState({\r\n            check: true\r\n        });\r\n    }\r\n\r\n    handleReset() {\r\n        this.setState({\r\n            check: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{ alignItems: \"center\", background: \"#777\" }} fluid>\r\n                <div className=\"card-board\">\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <button type=\"button\" onClick={() => this.handleCheck()}>Check</button>\r\n                            <br />\r\n                            <button type=\"button\" onClick={() => this.handleResult()}>Result</button>\r\n                            <br />\r\n                            <button type=\"button\" onClick={() => this.handleReset()}>New Hand</button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n"]},"metadata":{},"sourceType":"module"}