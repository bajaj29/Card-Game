{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\demo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Project\\\\demo-react\\\\src\\\\component\\\\signup.js\";\nimport React from 'react';\nimport Input from './signupComponent/Input';\nimport Button from './signupComponent/Button';\nimport ButtonBase from '@material-ui/FlatButton';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmpassword: ''\n      }\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n    fetch('http://example.com', {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmpassword: ''\n      }\n    });\n  }\n\n  handleFullName(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: _objectSpread({}, prevState.newUser, {\n        name: value\n      })\n    }));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"container\",\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: 'text',\n      title: 'Full Name',\n      name: 'name',\n      value: this.state.newUser.name,\n      placeholder: 'Enter your name',\n      handleChange: this.handleFullName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: 'text',\n      title: 'Email',\n      name: 'email',\n      value: this.state.newUser.email,\n      placeholder: 'Enter your email',\n      handleChange: this.handleFullName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: 'text',\n      title: 'User Name',\n      name: 'username',\n      value: this.state.newUser.username,\n      placeholder: 'Enter your username',\n      handleChange: this.handleFullName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: 'text',\n      title: 'Password',\n      name: 'password',\n      value: this.state.newUser.password,\n      placeholder: 'Password',\n      handleChange: this.handleFullName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: 'text',\n      title: 'Confirm Password',\n      name: 'confirmpassword',\n      value: this.state.newUser.confirmpassword,\n      placeholder: 'Confirm Password',\n      handleChange: this.handleFullName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \" \", React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:\\Project\\demo-react\\src\\component\\signup.js"],"names":["React","Input","Button","ButtonBase","SignUp","Component","constructor","props","state","newUser","name","email","username","password","confirmpassword","handleFormSubmit","bind","handleClearForm","e","preventDefault","userData","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","setState","handleFullName","value","target","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Input from './signupComponent/Input';\r\nimport Button from './signupComponent/Button';\r\nimport ButtonBase from '@material-ui/FlatButton';\r\n\r\nclass SignUp extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n      \t\tnewUser: {\r\n        \tname: '',\r\n        \temail: '',\r\n       \t\tusername: '',\r\n       \t\tpassword: '',\r\n        \tconfirmpassword: ''\r\n\t\t  }\r\n\t\t} \r\n\t\t  this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    \t  this.handleClearForm = this.handleClearForm.bind(this);\r\n\t}\r\n\r\n\thandleFormSubmit(e) {\r\n    \te.preventDefault();\r\n    \tlet userData = this.state.newUser;\r\n\r\n    \tfetch('http://example.com',{\r\n        \tmethod: \"POST\",\r\n        \tbody: JSON.stringify(userData),\r\n        \theaders: {\r\n          \t\t'Accept': 'application/json',\r\n          \t\t'Content-Type': 'application/json'\r\n        \t},\r\n      \t}).then(response => {\r\n        \tresponse.json().then(data =>{\r\n          \t\tconsole.log(\"Successful\" + data);\r\n        \t})\r\n    \t})\r\n\t}\r\n\t  \r\n  \thandleClearForm(e) {\r\n     \te.preventDefault();\r\n      \tthis.setState({ \r\n        \tnewUser: {\r\n          \t\tname: '',\r\n          \t\temail: '',\r\n          \t\tusername: '',\r\n          \t\tpassword: '',\r\n          \t\tconfirmpassword: ''\r\n        \t},\r\n      \t})\r\n\t  }\r\n\t  \r\n\t  handleFullName(e) {\r\n   \t\tlet value = e.target.value;\r\n   \t\tthis.setState( prevState => ({ newUser : \r\n        \t{...prevState.newUser, name: value\r\n        \t}\r\n      \t}))\r\n  \t}\r\n\r\n\trender() {\r\n    \treturn (\r\n      \t\t<form className=\"container\" onSubmit={this.handleFormSubmit}>\r\n\r\n        \t<Input type={'text'} title= {'Full Name'} name= {'name'} value={this.state.newUser.name} placeholder = {'Enter your name'} handleChange = {this.handleFullName} /> {/* Name of the user */}\r\n        \t<Input type={'text'} title= {'Email'} name= {'email'} value={this.state.newUser.email} placeholder = {'Enter your email'} handleChange = {this.handleFullName} /> {/* Input for Age */} \r\n        \t<Input type={'text'} title= {'User Name'} name= {'username'} value={this.state.newUser.username} placeholder = {'Enter your username'} handleChange = {this.handleFullName} /> {/* Name of the user */}\r\n        \t<Input type={'text'} title= {'Password'} name= {'password'} value={this.state.newUser.password} placeholder = {'Password'} handleChange = {this.handleFullName} /> {/* Input for Age */} \r\n        \t<Input type={'text'} title= {'Confirm Password'} name= {'confirmpassword'} value={this.state.newUser.confirmpassword} placeholder = {'Confirm Password'} handleChange = {this.handleFullName} /> {/* Name of the user */}\r\n        \t<Button /> {/* Clear the form */}\r\n      \t\t</form>\r\n    \t);\r\n  \t}\r\n\t\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}