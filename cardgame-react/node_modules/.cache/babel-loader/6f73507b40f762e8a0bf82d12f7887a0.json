{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\cardgame-react\\\\src\\\\component\\\\card-table\\\\CardTable.js\";\nimport React, { Component } from 'react';\nimport './CardTable.css';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\nimport { getCards, getResult, addImages } from './CardTableAction';\nimport { connect } from 'react-redux';\nimport Store from '../redux/Store';\n\nvar CardBack = require('../cards-png/red_back.png');\n\nclass CardTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      cardA1: '',\n      cardA2: '',\n      cardA3: '',\n      cardB1: '',\n      cardB2: '',\n      cardB3: '',\n      cardC1: '',\n      cardC2: '',\n      cardC3: '',\n      cardD1: '',\n      cardD2: '',\n      cardD3: '',\n      handRank: [],\n      winner: [],\n      winnerHand: [],\n      player1: 'Clarke',\n      player2: 'Murphy',\n      player3: 'Bellamy',\n      player4: 'Raven',\n      showCheck: true,\n      showResult: false,\n      showNewHand: false\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n    this.createFrontCardDiv = this.createFrontCardDiv.bind(this);\n    this.createBackCardDiv = this.createBackCardDiv.bind(this);\n  }\n\n  componentDidMount() {\n    this.distributeCards();\n  }\n\n  handleResult() {\n    const cardList = Store.getState().cardTable.cards;\n    const nameList = Store.getState().main;\n    const card = {\n      cards: cardList\n    };\n    this.setState({\n      showCheck: false,\n      showResult: false,\n      showNewHand: true\n    });\n    this.props.getResult(card);\n  }\n\n  distributeCards() {\n    this.props.getCards();\n  }\n\n  handleCheck() {\n    const cards = this.props.cardTable.cards;\n    var imageList = [];\n\n    for (var i = 0; i < cards.length; i++) {\n      imageList.push(require(\"../cards-png/\" + cards[i] + \".png\"));\n    }\n\n    this.props.addImages(imageList);\n    this.setState({\n      check: true,\n      showResult: true,\n      showCheck: false,\n      showNewHand: false\n    });\n  }\n\n  createFrontCardDiv(images, index) {\n    var divFrontCard = [];\n\n    for (var i = index; i < index + 3; i++) {\n      divFrontCard.push(React.createElement(Card, {\n        style: {\n          width: '6rem',\n          height: '9rem',\n          border: '2px solid rgb(221, 221, 224)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        src: images[i],\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    }\n\n    return divFrontCard;\n  }\n\n  createBackCardDiv() {\n    var divBackCard = [];\n\n    for (var i = 0; i < 3; i++) {\n      divBackCard.push(React.createElement(Card, {\n        style: {\n          width: '6rem',\n          height: '9rem',\n          border: '2px solid rgb(221, 221, 224)',\n          marginLeft: \"-5rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        src: CardBack,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    }\n\n    return divBackCard;\n  }\n\n  handleReset() {\n    this.distributeCards();\n    this.setState({\n      check: false,\n      showResult: false,\n      showCheck: true,\n      showNewHand: false\n    });\n  }\n\n  render() {\n    const _this$props$cardTable = this.props.cardTable,\n          images = _this$props$cardTable.images,\n          cards = _this$props$cardTable.cards,\n          winners = _this$props$cardTable.winners;\n    const _this$props$main = this.props.main,\n          player1 = _this$props$main.player1,\n          player2 = _this$props$main.player2,\n          player3 = _this$props$main.player3,\n          player4 = _this$props$main.player4;\n    return React.createElement(Container, {\n      style: {\n        alignItems: \"center\",\n        background: \"#777\",\n        width: \"150%\",\n        marginleft: \"-50px\"\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, player1, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, player1, \"'s Seat\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 0))), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: () => this.handleCheck(),\n      disabled: !this.state.showCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn1\",\n      onClick: () => this.handleResult(),\n      disabled: !this.state.showResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn1\",\n      onClick: () => this.handleReset(),\n      disabled: !this.state.showNewHand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"New Hand\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, player2, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, player2, \"'s Seat\")), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, player3, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, player3, \"'s Seat\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 3))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 6)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 9))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, player4, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, player4, \"'s Seat\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cardTable: state.cardTable,\n    main: state.main\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCards: () => dispatch(getCards()),\n    getResult: cardList => dispatch(getResult(cardList)),\n    addImages: imageList => dispatch(addImages(imageList))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardTable);","map":{"version":3,"sources":["C:\\Project\\cardgame-react\\src\\component\\card-table\\CardTable.js"],"names":["React","Component","Container","Card","Row","Col","getCards","getResult","addImages","connect","Store","CardBack","require","CardTable","constructor","props","state","check","cardA1","cardA2","cardA3","cardB1","cardB2","cardB3","cardC1","cardC2","cardC3","cardD1","cardD2","cardD3","handRank","winner","winnerHand","player1","player2","player3","player4","showCheck","showResult","showNewHand","handleCheck","bind","handleReset","handleResult","createFrontCardDiv","createBackCardDiv","componentDidMount","distributeCards","cardList","getState","cardTable","cards","nameList","main","card","setState","imageList","i","length","push","images","index","divFrontCard","width","height","border","divBackCard","marginLeft","render","winners","alignItems","background","marginleft","textAlign","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './CardTable.css'\r\nimport { Container, Card, Row, Col } from 'react-bootstrap'\r\nimport { getCards, getResult, addImages } from './CardTableAction';\r\nimport { connect } from 'react-redux';\r\nimport Store from '../redux/Store';\r\nvar CardBack = require('../cards-png/red_back.png');\r\n\r\n\r\nclass CardTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            cardA1: '',\r\n            cardA2: '',\r\n            cardA3: '',\r\n            cardB1: '',\r\n            cardB2: '',\r\n            cardB3: '',\r\n            cardC1: '',\r\n            cardC2: '',\r\n            cardC3: '',\r\n            cardD1: '',\r\n            cardD2: '',\r\n            cardD3: '',\r\n            handRank: [],\r\n            winner: [],\r\n            winnerHand: [],\r\n            player1: 'Clarke',\r\n            player2: 'Murphy',\r\n            player3: 'Bellamy',\r\n            player4: 'Raven',\r\n            showCheck: true,\r\n            showResult: false,\r\n            showNewHand: false\r\n        };\r\n        \r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleResult = this.handleResult.bind(this);\r\n        this.createFrontCardDiv = this.createFrontCardDiv.bind(this);\r\n        this.createBackCardDiv = this.createBackCardDiv.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.distributeCards();\r\n    }\r\n\r\n    handleResult() {\r\n        const cardList = Store.getState().cardTable.cards\r\n        const nameList = Store.getState().main\r\n        const card = {\r\n            cards : cardList\r\n        }\r\n        this.setState({\r\n            showCheck: false,\r\n            showResult: false,\r\n            showNewHand: true\r\n        })\r\n        this.props.getResult(card)\r\n    }\r\n\r\n    distributeCards() {\r\n        this.props.getCards(); \r\n    }\r\n\r\n    handleCheck() {\r\n        const {cards} = this.props.cardTable\r\n        var imageList = []\r\n        for(var i = 0; i < cards.length; i++){\r\n            imageList.push(require(\"../cards-png/\" + cards[i] + \".png\"))\r\n        }\r\n        this.props.addImages(imageList)\r\n\r\n        this.setState({\r\n            check: true,\r\n            showResult: true,\r\n            showCheck: false,\r\n            showNewHand: false,\r\n        })\r\n    }\r\n\r\n    createFrontCardDiv(images, index) {\r\n        var divFrontCard = []\r\n        for(var i = index; i < index+3; i++){\r\n            divFrontCard.push(\r\n                <Card style={{ width: '6rem', height: '9rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                    <Card.Img src={images[i]} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                </Card>\r\n            )\r\n        }\r\n        return divFrontCard\r\n    }\r\n\r\n    createBackCardDiv(){\r\n        var divBackCard = []\r\n        for(var i = 0; i < 3; i++){\r\n            divBackCard.push(\r\n                <Card style={{ width: '6rem', height: '9rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-5rem\" }}>\r\n                    <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                </Card>\r\n            )\r\n        }\r\n        return divBackCard\r\n    }\r\n\r\n    handleReset() {\r\n        this.distributeCards()\r\n        this.setState({\r\n            check: false,\r\n            showResult: false,\r\n            showCheck: true,\r\n            showNewHand: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {images, cards, winners} = this.props.cardTable\r\n        const { player1, player2, player3, player4} = this.props.main\r\n        return (\r\n            <Container style={{ alignItems: \"center\", background: \"#777\", width: \"150%\", marginleft:\"-50px\" }} fluid>\r\n                <div className=\"card-board\">\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                        <Col sm={12}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player1}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{player1}'s Seat</p> )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\"}}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createBackCardDiv()}\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createFrontCardDiv(images,0)}\r\n                                </div>\r\n                            )}\r\n\r\n                        </Col>\r\n                        <Col sm={4} style={{textAlign: \"right\"}}>\r\n                            <button type=\"button\" className=\"btn\" onClick={() => this.handleCheck()} disabled={!this.state.showCheck}>Check</button>\r\n                            <br />\r\n                            <button type=\"button\" className=\"btn1\" onClick={() => this.handleResult()} disabled={!this.state.showResult}>Result</button>\r\n                            <br />\r\n                            <button type=\"button\" className=\"btn1\" onClick={() => this.handleReset()} disabled={!this.state.showNewHand}>New Hand</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                        <Col sm={4}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player2}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{player2}'s Seat</p> )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player3}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{player3}'s Seat</p> )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" , textAlign: \"center\" }}>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createBackCardDiv()}\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createFrontCardDiv(images,3)}\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createBackCardDiv()}\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createFrontCardDiv(images,6)}\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" , textAlign: \"center\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createBackCardDiv()}\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    {this.createFrontCardDiv(images,9)}\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                        <Col sm={12}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player4}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{player4}'s Seat</p> )}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        cardTable : state.cardTable,\r\n        main : state.main\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        getCards: () => dispatch(getCards()),\r\n        getResult: (cardList) => dispatch(getResult(cardList)),\r\n        addImages: (imageList) => dispatch(addImages(imageList))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardTable)\r\n"]},"metadata":{},"sourceType":"module"}