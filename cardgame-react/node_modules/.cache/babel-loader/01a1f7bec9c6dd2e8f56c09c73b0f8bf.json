{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\cardgame-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_IMAGES, GET_CARDS_REQUEST, GET_CARDS_SUCCESS, GET_CARDS_FAILURE, GET_RESULT_REQUEST, GET_RESULT_SUCCESS, GET_RESULT_FAILURE, CLEAR_DATA } from \"./CardTableAction\";\nconst initialState = {\n  cards: [],\n  images: [],\n  winners: [],\n  error: null,\n  loading: false\n};\n\nconst CardTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RESULT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_RESULT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        winners: state.winners.concat(action.payload)\n      });\n\n    case GET_RESULT_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case GET_RESULT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_CARDS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_CARDS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        cards: state.cards.concat(action.payload)\n      });\n\n    case GET_CARDS_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case ADD_IMAGES:\n      return _objectSpread({}, state, {\n        images: state.images.concat(action.payload)\n      });\n\n    case CLEAR_DATA:\n      return _objectSpread({}, state, {\n        images: [],\n        cards: [],\n        winners: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default CardTableReducer;","map":{"version":3,"sources":["C:\\Project\\cardgame-react\\src\\component\\card-table\\CardTableReducer.js"],"names":["ADD_IMAGES","GET_CARDS_REQUEST","GET_CARDS_SUCCESS","GET_CARDS_FAILURE","GET_RESULT_REQUEST","GET_RESULT_SUCCESS","GET_RESULT_FAILURE","CLEAR_DATA","initialState","cards","images","winners","error","loading","CardTableReducer","state","action","type","concat","payload"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,iBAArB,EAAwCC,iBAAxC,EAA2DC,iBAA3D,EAA8EC,kBAA9E,EAAkGC,kBAAlG,EAAsHC,kBAAtH,EAA0IC,UAA1I,QAA4J,mBAA5J;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,MAAM,EAAG,EAFQ;AAGjBC,EAAAA,OAAO,EAAG,EAHO;AAIjBC,EAAAA,KAAK,EAAG,IAJS;AAKjBC,EAAAA,OAAO,EAAG;AALO,CAArB;;AAQA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAiC;AAEtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,kBAAL;AAAyB,+BAClBW,KADkB;AAErBF,QAAAA,OAAO,EAAG;AAFW;;AAIzB,SAAKR,kBAAL;AAAyB,+BAClBU,KADkB;AAErBF,QAAAA,OAAO,EAAG,KAFW;AAGrBF,QAAAA,OAAO,EAAGI,KAAK,CAACJ,OAAN,CAAcO,MAAd,CAAqBF,MAAM,CAACG,OAA5B;AAHW;;AAKzB,SAAKb,kBAAL;AAAyB,+BAClBS,KADkB;AAErBF,QAAAA,OAAO,EAAG,KAFW;AAGrBD,QAAAA,KAAK,EAAGI,MAAM,CAACG;AAHM;;AAKzB,SAAKf,kBAAL;AAAyB,+BAClBW,KADkB;AAErBF,QAAAA,OAAO,EAAG;AAFW;;AAIzB,SAAKZ,iBAAL;AAAwB,+BACjBc,KADiB;AAEpBF,QAAAA,OAAO,EAAG;AAFU;;AAIxB,SAAKX,iBAAL;AAAwB,+BACjBa,KADiB;AAEpBF,QAAAA,OAAO,EAAG,KAFU;AAGpBJ,QAAAA,KAAK,EAAGM,KAAK,CAACN,KAAN,CAAYS,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;AAHY;;AAKxB,SAAKhB,iBAAL;AAAwB,+BACjBY,KADiB;AAEpBF,QAAAA,OAAO,EAAG,KAFU;AAGpBD,QAAAA,KAAK,EAAGI,MAAM,CAACG;AAHK;;AAKxB,SAAKnB,UAAL;AAAiB,+BACVe,KADU;AAEbL,QAAAA,MAAM,EAAGK,KAAK,CAACL,MAAN,CAAaQ,MAAb,CAAoBF,MAAM,CAACG,OAA3B;AAFI;;AAIjB,SAAKZ,UAAL;AAAiB,+BACVQ,KADU;AAEbL,QAAAA,MAAM,EAAG,EAFI;AAGbD,QAAAA,KAAK,EAAG,EAHK;AAIbE,QAAAA,OAAO,EAAG;AAJG;;AAMjB;AAAS,aAAOI,KAAP;AA3Cb;AA6CH,CA/CD;;AAiDA,eAAeD,gBAAf","sourcesContent":["import { ADD_IMAGES, GET_CARDS_REQUEST, GET_CARDS_SUCCESS, GET_CARDS_FAILURE, GET_RESULT_REQUEST, GET_RESULT_SUCCESS, GET_RESULT_FAILURE, CLEAR_DATA } from \"./CardTableAction\"\r\n\r\nconst initialState = {\r\n    cards : [],\r\n    images : [],\r\n    winners : [],\r\n    error : null,\r\n    loading : false \r\n}\r\n\r\nconst CardTableReducer = (state = initialState, action) =>{\r\n\r\n    switch(action.type){\r\n        case GET_RESULT_REQUEST: return{\r\n            ...state,\r\n            loading : true\r\n        }\r\n        case GET_RESULT_SUCCESS: return{\r\n            ...state,\r\n            loading : false,\r\n            winners : state.winners.concat(action.payload)\r\n        }\r\n        case GET_RESULT_FAILURE: return{\r\n            ...state,\r\n            loading : false,\r\n            error : action.payload\r\n        }\r\n        case GET_RESULT_REQUEST: return{\r\n            ...state,\r\n            loading : true\r\n        }\r\n        case GET_CARDS_REQUEST: return{\r\n            ...state,\r\n            loading : true\r\n        }\r\n        case GET_CARDS_SUCCESS: return{\r\n            ...state,\r\n            loading : false,\r\n            cards : state.cards.concat(action.payload) \r\n        }\r\n        case GET_CARDS_FAILURE: return{\r\n            ...state,\r\n            loading : false,\r\n            error : action.payload\r\n        }\r\n        case ADD_IMAGES: return{\r\n            ...state,\r\n            images : state.images.concat(action.payload)\r\n        }\r\n        case CLEAR_DATA: return{\r\n            ...state,\r\n            images : [],\r\n            cards : [],\r\n            winners : []\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default CardTableReducer"]},"metadata":{},"sourceType":"module"}