{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\demo-react\\\\src\\\\component\\\\test\\\\Test.js\";\nimport React, { Component } from 'react';\nimport './Test.css';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\n\nvar CardBack = require('../test/cards-png/red_back.png');\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      imageA1: '',\n      imageA2: '',\n      imageA3: '',\n      imageB1: '',\n      imageB2: '',\n      imageB3: '',\n      imageC1: '',\n      imageC2: '',\n      imageC3: '',\n      imageD1: '',\n      imageD2: '',\n      imageD3: '',\n      cardA1: '',\n      cardA2: '',\n      cardA3: '',\n      cardB1: '',\n      cardB2: '',\n      cardB3: '',\n      cardC1: '',\n      cardC2: '',\n      cardC3: '',\n      cardD1: '',\n      cardD2: '',\n      cardD3: '',\n      handRank: [],\n      winner: []\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n  }\n\n  handleResult() {\n    var orderA = this.arrangeOrder(\"A\");\n    var orderB = this.arrangeOrder(\"B\");\n    var orderC = this.arrangeOrder(\"C\");\n    var orderD = this.arrangeOrder(\"D\");\n    this.giveHandRanking(orderA);\n    this.giveHandRanking(orderB);\n    this.giveHandRanking(orderC);\n    this.giveHandRanking(orderD); // var min = this.state.handRank[0]\n    // var winArr = null\n\n    if (this.state.handRank[0] === this.state.handRank[1] === this.state.handRank[2] === this.state.handRank[3]) {\n      if (this.state.handRank[0] === 1) {\n        var max = 2;\n\n        if (orderA[0] >= max) {\n          max = orderA[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('A')\n          });\n        }\n\n        if (orderB[0] >= max) {\n          max = orderB[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('B')\n          });\n        }\n\n        if (orderC[0] >= max) {\n          max = orderC[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        }\n\n        if (orderD[0] >= max) {\n          max = orderD[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        }\n      } else if (this.state.handRank[0] === 2) {\n        var max = 4;\n\n        if (orderA[0] >= max) {\n          max = orderA[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('A')\n          });\n        }\n\n        if (orderB[0] > max) {\n          max = orderB[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('B')\n          });\n        } else if (orderB[0] === max) {\n          this.setState({\n            winner: this.state.winner.concat('B')\n          });\n        }\n\n        if (orderC[0] > max) {\n          max = orderC[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        } else if (orderC[0] === max) {\n          this.setState({\n            winner: this.state.winner.concat('C')\n          });\n        }\n\n        if (orderD[0] >= max) {\n          max = orderD[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        } else if (orderD[0] === max) {\n          this.setState({\n            winner: this.state.winner.concat('D')\n          });\n        }\n      } else if (this.state.handRank[0] === 3) {\n        var max = 2; //last index of the order\n\n        var maxL = orderA[2];\n\n        if (orderA[0] >= max) {\n          max = orderA[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('A')\n          });\n        }\n\n        if (orderB[0] > max) {\n          max = orderB[0];\n          maxL = orderB[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('A')\n          });\n        } else if (orderB[0] === max && orderB[2] === maxL) {\n          this.setState({\n            winner: this.state.winner.concat('B')\n          });\n        } else if (orderB[0] === max && orderB[2] > maxL) {\n          maxL = orderB[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('B')\n          });\n        }\n\n        if (orderC[0] > max) {\n          max = orderC[0];\n          maxL = orderC[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        } else if (orderC[0] === max && orderC[2] === maxL) {\n          this.setState({\n            winner: this.state.winner.concat('C')\n          });\n        } else if (orderC[0] === max && orderC[2] > maxL) {\n          maxL = orderC[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        }\n\n        if (orderD[0] > max) {\n          max = orderD[0];\n          maxL = orderD[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        } else if (orderD[0] === max && orderD[2] === maxL) {\n          this.setState({\n            winner: this.state.winner.concat('D')\n          });\n        } else if (orderD[0] === max && orderD[2] > maxL) {\n          maxL = orderD[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        }\n      } else if (this.state.handRank[0] === 4) {\n        var max = 2;\n        var maxM = orderA[1];\n        var maxL = orderA[2];\n\n        if (orderA[0] >= max) {\n          max = orderA[0];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('A')\n          });\n        }\n\n        if (orderB[0] > max) {\n          max = orderB[0];\n          maxM = orderB[1];\n          maxL = orderB[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('B')\n          });\n        } else if (orderB[0] === max && orderB[1] > maxM) {\n          max = orderB[0];\n          maxM = orderB[1];\n          maxL = orderB[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('B')\n          });\n        } else if (orderB[0] === max && orderB[1] === maxM && orderB[2] > maxL) {\n          max = orderB[0];\n          maxM = orderB[1];\n          maxL = orderB[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('B')\n          });\n        } else if (orderB[0] === max && orderB[1] === maxM && orderB[2] === maxL) {\n          this.setState({\n            winner: this.state.winner.concat('B')\n          });\n        }\n\n        if (orderC[0] > max) {\n          max = orderC[0];\n          maxM = orderC[1];\n          maxL = orderC[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        } else if (orderC[0] === max && orderC[1] > maxM) {\n          max = orderC[0];\n          maxM = orderC[1];\n          maxL = orderC[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        } else if (orderC[0] === max && orderC[1] === maxM && orderC[2] > maxL) {\n          max = orderC[0];\n          maxM = orderC[1];\n          maxL = orderC[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('C')\n          });\n        } else if (orderC[0] === max && orderC[1] === maxM && orderC[2] === maxL) {\n          this.setState({\n            winner: this.state.winner.concat('C')\n          });\n        }\n\n        if (orderD[0] > max) {\n          max = orderD[0];\n          maxM = orderD[1];\n          maxL = orderD[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        } else if (orderD[0] === max && orderD[1] > maxM) {\n          max = orderD[0];\n          maxM = orderD[1];\n          maxL = orderD[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        } else if (orderD[0] === max && orderD[1] === maxM && orderD[2] > maxL) {\n          max = orderD[0];\n          maxM = orderD[1];\n          maxL = orderD[2];\n          this.setState({\n            winner: [],\n            winner: this.state.winner.concat('D')\n          });\n        } else if (orderD[0] === max && orderD[1] === maxM && orderD[2] === maxL) {\n          this.setState({\n            winner: this.state.winner.concat('D')\n          });\n        }\n      }\n    }\n  } // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\n\n\n  giveHandRanking(order) {\n    if (order[0] === order[1] === order[2]) {\n      this.setState({\n        handRank: this.state.handRank.concat(1)\n      });\n    } else if (order[0] - 1 === order[1] && order[1] - 1 === order[2]) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0] === order[1] || order[0] === order[2] || order[1] === order[2]) {\n      this.setState({\n        handRank: this.state.handRank.concat(3)\n      });\n    } else {\n      this.setState({\n        handRank: this.state.handRank.concat(4)\n      });\n    }\n  }\n\n  arrangeOrder(char) {\n    var order = [];\n    var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1;\n    var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2;\n    var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3;\n    order.push(parseInt(card1), parseInt(card2), parseInt(card3));\n    order.sort((a, b) => b - a);\n\n    if (order[0] !== order[1] && order[1] === order[2]) {\n      var card = order.splice(0, 1)[0];\n      order.splice(2, 0, card);\n    }\n\n    console.log(order);\n    return order;\n  }\n\n  getCardValue(card) {\n    let cardMap = new Map([['A', 14], ['K', 13], ['Q', 12], ['J', 11], ['10', 10], ['9', 9], ['8', 8], ['7', 7], ['6', 6], ['5', 5], ['4', 4], ['3', 3], ['2', 2]]);\n    var cardValue = 0;\n\n    if (!card.includes('10')) {\n      cardValue = cardMap.get(card[0]);\n    } else {\n      console.log(card.substring(0, 2));\n      cardValue = cardMap.get(card.substring(0, 2));\n    }\n\n    return cardValue;\n  }\n\n  distributeCards() {\n    var imageSourceList = ['2C', '2D', '2H', '2S', '3C', '3D', '3H', '3S', '4C', '4D', '4H', '4S', '5C', '5D', '5H', '5S', '6C', '6D', '6H', '6S', '7C', '7D', '7H', '7S', '8C', '8D', '8H', '8S', '9C', '9D', '9H', '9S', '10C', '10D', '10H', '10S', 'JC', 'JD', 'JH', 'JS', 'QC', 'QD', 'QH', 'QS', 'KC', 'KD', 'KH', 'KS', 'AC', 'AD', 'AH', 'AS']; //for seat A\n\n    var randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    var randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA1: require('../test/cards-png/' + randomCard + '.png'),\n      cardA1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA2: require('../test/cards-png/' + randomCard + '.png'),\n      cardA2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA3: require('../test/cards-png/' + randomCard + '.png'),\n      cardA3: this.getCardValue(randomCard)\n    }); //for seat B\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB1: require('../test/cards-png/' + randomCard + '.png'),\n      cardB1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB2: require('../test/cards-png/' + randomCard + '.png'),\n      cardB2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB3: require('../test/cards-png/' + randomCard + '.png'),\n      cardB3: this.getCardValue(randomCard)\n    }); //for seat C\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC1: require('../test/cards-png/' + randomCard + '.png'),\n      cardC1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC2: require('../test/cards-png/' + randomCard + '.png'),\n      cardC2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC3: require('../test/cards-png/' + randomCard + '.png'),\n      cardC3: this.getCardValue(randomCard)\n    }); //for seat D\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD1: require('../test/cards-png/' + randomCard + '.png'),\n      cardD1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD2: require('../test/cards-png/' + randomCard + '.png'),\n      cardD2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD3: require('../test/cards-png/' + randomCard + '.png'),\n      cardD3: this.getCardValue(randomCard)\n    });\n  }\n\n  handleCheck() {\n    this.distributeCards();\n    this.setState({\n      check: true\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      check: false\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        alignItems: \"center\",\n        background: \"#777\"\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleCheck(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleResult(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, \"New Hand\")))));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:\\Project\\demo-react\\src\\component\\test\\Test.js"],"names":["React","Component","Container","Card","Row","Col","CardBack","require","Test","constructor","props","state","check","imageA1","imageA2","imageA3","imageB1","imageB2","imageB3","imageC1","imageC2","imageC3","imageD1","imageD2","imageD3","cardA1","cardA2","cardA3","cardB1","cardB2","cardB3","cardC1","cardC2","cardC3","cardD1","cardD2","cardD3","handRank","winner","handleCheck","bind","handleReset","handleResult","orderA","arrangeOrder","orderB","orderC","orderD","giveHandRanking","max","setState","concat","maxL","maxM","order","char","card1","card2","card3","push","parseInt","sort","a","b","card","splice","console","log","getCardValue","cardMap","Map","cardValue","includes","get","substring","distributeCards","imageSourceList","randomIndex","Math","floor","random","length","randomCard","render","alignItems","background","marginLeft","textAlign","width","height","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './Test.css'\r\nimport { Container, Card, Row, Col } from 'react-bootstrap'\r\nvar CardBack = require('../test/cards-png/red_back.png');\r\n\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            imageA1: '',\r\n            imageA2: '',\r\n            imageA3: '',\r\n            imageB1: '',\r\n            imageB2: '',\r\n            imageB3: '',\r\n            imageC1: '',\r\n            imageC2: '',\r\n            imageC3: '',\r\n            imageD1: '',\r\n            imageD2: '',\r\n            imageD3: '',\r\n            cardA1: '',\r\n            cardA2: '',\r\n            cardA3: '',\r\n            cardB1: '',\r\n            cardB2: '',\r\n            cardB3: '',\r\n            cardC1: '',\r\n            cardC2: '',\r\n            cardC3: '',\r\n            cardD1: '',\r\n            cardD2: '',\r\n            cardD3: '',\r\n            handRank: [],\r\n            winner: [],\r\n        };\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleResult = this.handleResult.bind(this);\r\n    }\r\n\r\n    handleResult() {\r\n        var orderA = this.arrangeOrder(\"A\")\r\n        var orderB = this.arrangeOrder(\"B\")\r\n        var orderC = this.arrangeOrder(\"C\")\r\n        var orderD = this.arrangeOrder(\"D\")\r\n        this.giveHandRanking(orderA)\r\n        this.giveHandRanking(orderB)\r\n        this.giveHandRanking(orderC)\r\n        this.giveHandRanking(orderD)\r\n        // var min = this.state.handRank[0]\r\n        // var winArr = null\r\n        if (this.state.handRank[0] === this.state.handRank[1] === this.state.handRank[2] === this.state.handRank[3]) {\r\n            if(this.state.handRank[0] === 1){\r\n                var max = 2\r\n                if(orderA[0] >= max){\r\n                    max = orderA[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('A')\r\n                    })\r\n                }\r\n                if(orderB[0] >= max){\r\n                    max = orderB[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                if(orderC[0] >= max){\r\n                    max = orderC[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                if(orderD[0] >= max){\r\n                    max = orderD[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('D')\r\n                    })\r\n                }\r\n            }\r\n            else if(this.state.handRank[0] === 2){\r\n                var max = 4\r\n                if(orderA[0] >= max){\r\n                    max = orderA[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('A')\r\n                    })\r\n                }\r\n                if(orderB[0] > max){\r\n                    max = orderB[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                else if(orderB[0] === max){\r\n                    this.setState({\r\n                        winner : this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                if(orderC[0] > max){\r\n                    max = orderC[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                else if(orderC[0] === max){\r\n                    this.setState({\r\n                        winner : this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                if(orderD[0] >= max){\r\n                    max = orderD[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('D')\r\n                    })\r\n                }\r\n                else if(orderD[0] === max){\r\n                    this.setState({\r\n                        winner : this.state.winner.concat('D')\r\n                    })\r\n                }\r\n            }\r\n            else if(this.state.handRank[0] === 3){\r\n                var max = 2\r\n                //last index of the order\r\n                var maxL = orderA[2]\r\n                if(orderA[0] >= max){\r\n                    max = orderA[0]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('A')\r\n                    })\r\n                }\r\n                if(orderB[0] > max){\r\n                    max = orderB[0]\r\n                    maxL = orderB[2]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('A')\r\n                    })\r\n                }\r\n                else if(orderB[0] === max && orderB[2] === maxL){\r\n                    this.setState({\r\n                        winner : this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                else if(orderB[0] === max && orderB[2] > maxL){\r\n                    maxL = orderB[2]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                if(orderC[0] > max){\r\n                    max = orderC[0]\r\n                    maxL = orderC[2]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                else if(orderC[0] === max && orderC[2] === maxL){\r\n                    this.setState({\r\n                        winner : this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                else if(orderC[0] === max && orderC[2] > maxL){\r\n                    maxL = orderC[2]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                if(orderD[0] > max){\r\n                    max = orderD[0]\r\n                    maxL = orderD[2]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('D')\r\n                    })\r\n                }\r\n                else if(orderD[0] === max && orderD[2] === maxL){\r\n                    this.setState({\r\n                        winner : this.state.winner.concat('D')\r\n                    })\r\n                }\r\n                else if(orderD[0] === max && orderD[2] > maxL){\r\n                    maxL = orderD[2]\r\n                    this.setState({\r\n                        winner : [],\r\n                        winner : this.state.winner.concat('D')\r\n                    })\r\n                }\r\n            }\r\n            else if(this.state.handRank[0] === 4){\r\n                var max = 2\r\n                var maxM = orderA[1]\r\n                var maxL = orderA[2]\r\n                if(orderA[0] >= max){\r\n                    max = orderA[0]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('A')\r\n                    })\r\n                }\r\n                if(orderB[0] > max){\r\n                    max = orderB[0]\r\n                    maxM = orderB[1]\r\n                    maxL = orderB[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                else if(orderB[0] === max && orderB[1]> maxM){\r\n                    max = orderB[0]\r\n                    maxM = orderB[1]\r\n                    maxL = orderB[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                else if(orderB[0] === max && orderB[1] === maxM && orderB[2] > maxL){\r\n                    max = orderB[0]\r\n                    maxM = orderB[1]\r\n                    maxL = orderB[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                else if(orderB[0] === max && orderB[1] === maxM && orderB[2] === maxL){\r\n                    this.setState({\r\n                        winner: this.state.winner.concat('B')\r\n                    })\r\n                }\r\n                if(orderC[0] > max){\r\n                    max = orderC[0]\r\n                    maxM = orderC[1]\r\n                    maxL = orderC[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                else if(orderC[0] === max && orderC[1]> maxM){\r\n                    max = orderC[0]\r\n                    maxM = orderC[1]\r\n                    maxL = orderC[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                else if(orderC[0] === max && orderC[1] === maxM && orderC[2] > maxL){\r\n                    max = orderC[0]\r\n                    maxM = orderC[1]\r\n                    maxL = orderC[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                else if(orderC[0] === max && orderC[1] === maxM && orderC[2] === maxL){\r\n                    this.setState({\r\n                        winner: this.state.winner.concat('C')\r\n                    })\r\n                }\r\n                if(orderD[0] > max){\r\n                    max = orderD[0]\r\n                    maxM = orderD[1]\r\n                    maxL = orderD[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('D')\r\n                    })\r\n                }\r\n                else if(orderD[0] === max && orderD[1]> maxM){\r\n                    max = orderD[0]\r\n                    maxM = orderD[1]\r\n                    maxL = orderD[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('D')\r\n                    })\r\n                }\r\n                else if(orderD[0] === max && orderD[1] === maxM && orderD[2] > maxL){\r\n                    max = orderD[0]\r\n                    maxM = orderD[1]\r\n                    maxL = orderD[2]\r\n                    this.setState({\r\n                        winner: [],\r\n                        winner: this.state.winner.concat('D')\r\n                    })\r\n                }\r\n                else if(orderD[0] === max && orderD[1] === maxM && orderD[2] === maxL){\r\n                    this.setState({\r\n                        winner: this.state.winner.concat('D')\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\r\n    giveHandRanking(order) {\r\n        if (order[0] === order[1] === order[2]) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(1)\r\n            })\r\n        }\r\n        else if (order[0]-1 === order[1] && order[1]-1 === order[2]) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if ((order[0] === order[1]) || (order[0] === order[2]) || (order[1] === order[2])) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(3)\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(4)\r\n            })\r\n        }\r\n    }\r\n\r\n    arrangeOrder(char) {\r\n        var order = []\r\n        var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1\r\n        var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2\r\n        var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3\r\n        order.push(parseInt(card1),parseInt(card2),parseInt(card3))\r\n        order.sort((a, b) => b - a)\r\n        if((order[0] !== order[1]) && (order[1] === order[2])){\r\n            var card = order.splice(0, 1)[0]\r\n            order.splice(2, 0, card)\r\n        }\r\n        console.log(order)\r\n        return order;\r\n    }\r\n\r\n    getCardValue(card){\r\n        let cardMap = new Map([ ['A', 14],['K', 13],['Q', 12],['J', 11],['10', 10],['9', 9],['8', 8],['7', 7],['6', 6],['5', 5],['4', 4],['3', 3],['2', 2] ]);\r\n        var cardValue = 0;\r\n        if(!card.includes('10')){\r\n            cardValue = cardMap.get(card[0])\r\n        }\r\n        else{\r\n            console.log(card.substring(0,2))\r\n            cardValue = cardMap.get(card.substring(0,2))\r\n        }\r\n        return cardValue;\r\n    }\r\n\r\n    distributeCards() {\r\n        var imageSourceList = ['2C', '2D', '2H', '2S', '3C', '3D', '3H', '3S', '4C', '4D', '4H', '4S', '5C', '5D', '5H', '5S', '6C', '6D', '6H', '6S', '7C', '7D', '7H', '7S', '8C', '8D', '8H', '8S', '9C', '9D', '9H', '9S', '10C', '10D', '10H', '10S', 'JC', 'JD', 'JH', 'JS', 'QC', 'QD', 'QH', 'QS', 'KC', 'KD', 'KH', 'KS', 'AC', 'AD', 'AH', 'AS']\r\n\r\n        //for seat A\r\n        var randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        var randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA1: require('../test/cards-png/' + randomCard + '.png'), cardA1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA2: require('../test/cards-png/' + randomCard + '.png'), cardA2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA3: require('../test/cards-png/' + randomCard + '.png'), cardA3: this.getCardValue(randomCard) })\r\n\r\n        //for seat B\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB1: require('../test/cards-png/' + randomCard + '.png'), cardB1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB2: require('../test/cards-png/' + randomCard + '.png'), cardB2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB3: require('../test/cards-png/' + randomCard + '.png'), cardB3: this.getCardValue(randomCard) })\r\n\r\n        //for seat C\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC1: require('../test/cards-png/' + randomCard + '.png'), cardC1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC2: require('../test/cards-png/' + randomCard + '.png'), cardC2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC3: require('../test/cards-png/' + randomCard + '.png'), cardC3: this.getCardValue(randomCard) })\r\n\r\n        //for seat D\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD1: require('../test/cards-png/' + randomCard + '.png'), cardD1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD2: require('../test/cards-png/' + randomCard + '.png'), cardD2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD3: require('../test/cards-png/' + randomCard + '.png'), cardD3: this.getCardValue(randomCard) })\r\n    }\r\n\r\n    handleCheck() {\r\n        this.distributeCards()\r\n        this.setState({\r\n            check: true\r\n        });\r\n    }\r\n\r\n    handleReset() {\r\n        this.setState({\r\n            check: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{ alignItems: \"center\", background: \"#777\" }} fluid>\r\n                <div className=\"card-board\">\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <button type=\"button\" onClick={() => this.handleCheck()}>Check</button>\r\n                            <br />\r\n                            <button type=\"button\" onClick={() => this.handleResult()}>Result</button>\r\n                            <br />\r\n                            <button type=\"button\" onClick={() => this.handleReset()}>New Hand</button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n"]},"metadata":{},"sourceType":"module"}