{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\demo-react\\\\src\\\\component\\\\signup.js\";\nimport React from 'react';\nimport _ from 'underscore';\n\nclass SignUp extends React.Component {\n  getInitialState() {\n    return {\n      email: null,\n      companyName: null,\n      password: null,\n      confirmPassword: null,\n      statesValue: null,\n      forbiddenWords: [\"password\", \"user\", \"username\"]\n    };\n  }\n\n  handlePasswordInput(event) {\n    if (!_.isEmpty(this.state.confirmPassword)) {\n      this.refs.passwordConfirm.isValid();\n    }\n\n    this.refs.passwordConfirm.hideError();\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleConfirmPasswordInput(event) {\n    this.setState({\n      confirmPassword: event.target.value\n    });\n  }\n\n  saveAndContinue() {\n    var canProceed = this.validateEmail(this.state.email) && !_.isEmpty(this.state.statesValue) && this.refs.password.isValid() && this.refs.passwordConfirm.isValid();\n\n    if (canProceed) {\n      var data = {\n        email: this.state.email,\n        state: this.state.statesValue\n      };\n      alert('Thanks.');\n    } else {\n      this.refs.email.isValid();\n      this.refs.state.isValid();\n      this.refs.companyName.isValid();\n      this.refs.password.isValid();\n      this.refs.passwordConfirm.isValid();\n    }\n  }\n\n  isConfirmedPassword(event) {\n    return event == this.state.password;\n  }\n\n  handleCompanyInput(event) {\n    this.setState({\n      companyName: event.target.value\n    });\n  }\n\n  handleEmailInput(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  validateEmail(event) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(event);\n  }\n\n  isEmpty(value) {\n    return !_.isEmpty(value);\n  }\n\n  updateStatesValue(value) {\n    this.setState({\n      statesValue: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"create_account_screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create_account_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Create account\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Example of form validation built with React.\"), React.createElement(\"form\", {\n      onSubmit: this.saveAndContinue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Input, {\n      text: \"Email Address\",\n      ref: \"email\",\n      type: \"text\",\n      defaultValue: this.state.email,\n      validate: this.validateEmail,\n      value: this.state.email,\n      onChange: this.handleEmailInput,\n      errorMessage: \"Email is invalid\",\n      emptyMessage: \"Email can't be empty\",\n      errorVisible: this.state.showEmailError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:\\Project\\demo-react\\src\\component\\signup.js"],"names":["React","_","SignUp","Component","getInitialState","email","companyName","password","confirmPassword","statesValue","forbiddenWords","handlePasswordInput","event","isEmpty","state","refs","passwordConfirm","isValid","hideError","setState","target","value","handleConfirmPasswordInput","saveAndContinue","canProceed","validateEmail","data","alert","isConfirmedPassword","handleCompanyInput","handleEmailInput","re","test","updateStatesValue","render","showEmailError"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport _ from 'underscore';\r\n\r\nclass SignUp extends React.Component{\r\n\r\n\tgetInitialState() {\r\n    \treturn {\r\n      \t\temail: null,\r\n      \t\tcompanyName: null,\r\n      \t\tpassword: null,\r\n      \t\tconfirmPassword: null,\r\n      \t\tstatesValue: null,\r\n      \t\tforbiddenWords: [\"password\", \"user\", \"username\"]\r\n    \t}\r\n  \t}\r\n\r\n  \thandlePasswordInput(event) {\r\n    \tif(!_.isEmpty(this.state.confirmPassword)){\r\n      \t\tthis.refs.passwordConfirm.isValid();\r\n    \t}\r\n    \tthis.refs.passwordConfirm.hideError();\r\n    \tthis.setState({\r\n      \t\tpassword: event.target.value\r\n    \t});\r\n  \t}\r\n\r\n  \thandleConfirmPasswordInput(event) {\r\n    \tthis.setState({\r\n      \t\tconfirmPassword: event.target.value\r\n    \t});\r\n  \t}\r\n\r\n\tsaveAndContinue() {\r\n\r\n\t\tvar canProceed = this.validateEmail(this.state.email) && !_.isEmpty(this.state.statesValue) && this.refs.password.isValid() && this.refs.passwordConfirm.isValid();\r\n\t\t\r\n\t\tif(canProceed){\r\n\t\t\tvar data = {\r\n        \temail: this.state.email,\r\n        \tstate: this.state.statesValue\r\n     \t\t}\r\n      \t\talert('Thanks.');\r\n\t\t} else {\r\n      \t\tthis.refs.email.isValid();\r\n     \t\tthis.refs.state.isValid();\r\n      \t\tthis.refs.companyName.isValid();\r\n      \t\tthis.refs.password.isValid();\r\n      \t\tthis.refs.passwordConfirm.isValid();\r\n    \t}\r\n\t}\r\n\r\n\tisConfirmedPassword(event) {\r\n    return (event == this.state.password)\r\n  \t}\r\n\r\n  \thandleCompanyInput(event) {\r\n    \tthis.setState({\r\n      \t\tcompanyName: event.target.value\r\n    \t})\r\n  \t}\r\n\r\n  \thandleEmailInput(event) {\r\n    \tthis.setState({\r\n      \t\temail: event.target.value\r\n    \t});\r\n \t}\r\n\r\n\tvalidateEmail(event) {\r\n    \tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \treturn re.test(event);\r\n\t}\r\n\t  \r\n\tisEmpty(value) {\r\n    \treturn !_.isEmpty(value);\r\n  \t}\r\n\r\n  \tupdateStatesValue(value) {\r\n    \tthis.setState({\r\n      \t\tstatesValue: value\r\n    \t})\r\n  \t}\r\n\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t<div className=\"create_account_screen\">\r\n\r\n        <div className=\"create_account_form\">\r\n          <h1>Create account</h1>\r\n          <p>Example of form validation built with React.</p>\r\n          <form onSubmit={this.saveAndContinue}>\r\n\t\t\t<Input \r\n              text=\"Email Address\" \r\n              ref=\"email\"\r\n              type=\"text\"\r\n              defaultValue={this.state.email} \r\n              validate={this.validateEmail}\r\n              value={this.state.email}\r\n              onChange={this.handleEmailInput} \r\n              errorMessage=\"Email is invalid\"\r\n              emptyMessage=\"Email can't be empty\"\r\n              errorVisible={this.state.showEmailError}\r\n            />\r\n\t\t  </form>\r\n        </div>\r\n\r\n\t  </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}