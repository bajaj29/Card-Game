{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\demo-react\\\\src\\\\component\\\\test\\\\Test.js\";\nimport React, { Component } from 'react';\nimport './Test.css';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\n\nvar CardBack = require('../test/cards-png/red_back.png');\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      imageA1: '',\n      imageA2: '',\n      imageA3: '',\n      imageB1: '',\n      imageB2: '',\n      imageB3: '',\n      imageC1: '',\n      imageC2: '',\n      imageC3: '',\n      imageD1: '',\n      imageD2: '',\n      imageD3: '',\n      cardA1: '',\n      cardA2: '',\n      cardA3: '',\n      cardB1: '',\n      cardB2: '',\n      cardB3: '',\n      cardC1: '',\n      cardC2: '',\n      cardC3: '',\n      cardD1: '',\n      cardD2: '',\n      cardD3: '',\n      handRank: [],\n      winner: []\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n  }\n\n  handleResult() {\n    var map = {\n      A: 14,\n      K: 13,\n      Q: 12,\n      J: 11\n    };\n    var orderA = this.arrangeOrder(\"A\");\n    var orderB = this.arrangeOrder(\"B\");\n    var orderC = this.arrangeOrder(\"C\");\n    var orderD = this.arrangeOrder(\"D\");\n    this.giveHandRanking(this.arrangeOrder(\"A\"));\n    this.giveHandRanking(this.arrangeOrder(\"B\"));\n    this.giveHandRanking(this.arrangeOrder(\"C\"));\n    this.giveHandRanking(this.arrangeOrder(\"D\"));\n    var min = this.state.handRank[0];\n    var winArr = null;\n\n    if (this.state.handRank[0] === this.state.handRank[1] === this.state.handRank[2] === this.state.handRank[3]) {\n      if (this.state.handRank[0] === 1) {\n        var max = 2;\n\n        for (var i in map) {\n          if (!orderA[0].includes(10) && orderA[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('A')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('A')\n            });\n          }\n\n          if (!orderB[0].includes(10) && orderB[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('B')\n            });\n          } else if (orderB[0].includes(10) && orderB[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('B')\n            });\n          }\n\n          if (!orderC[0].includes(10) && orderC[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('C')\n            });\n          } else if (orderC[0].includes(10) && orderC[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('C')\n            });\n          }\n\n          if (!orderD[0].includes(10) && orderD[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('D')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('D')\n            });\n          }\n        }\n      } else if (this.state.handRank[0] === 2) {\n        var max = 4;\n\n        for (var i in map) {\n          if (!orderA[0].includes(10) && orderA[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('A')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('A')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('A')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('A')\n            });\n          }\n\n          if (!orderB[0].includes(10) && orderB[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('B')\n            });\n          } else if (!orderB[0].includes(10) && orderB[0][0] === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('B')\n            });\n          } else if (orderB[0].includes(10) && orderB[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('B')\n            });\n          } else if (orderB[0].includes(10) && orderB[0].substring(0, 2) === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('B')\n            });\n          }\n\n          if (!orderC[0].includes(10) && orderC[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('C')\n            });\n          } else if (!orderC[0].includes(10) && orderC[0][0] === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('C')\n            });\n          } else if (orderC[0].includes(10) && orderC[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('C')\n            });\n          } else if (orderC[0].includes(10) && orderC[0].substring(0, 2) === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('C')\n            });\n          }\n\n          if (!orderD[0].includes(10) && orderD[0][0] === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('D')\n            });\n          } else if (!orderD[0].includes(10) && orderD[0][0] === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('D')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max < map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: [],\n              winner: this.state.winner.concat('D')\n            });\n          } else if (orderA[0].includes(10) && orderA[0].substring(0, 2) === i.toString() && max === map.get(i)) {\n            max = map.get(i);\n            this.setState({\n              winner: this.state.winner.concat('D')\n            });\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < this.state.handRank.length; i++) {\n        if (this.state.handRank[i] < min) {\n          min = this.state.handRank[i];\n          winArr = [];\n          winArr.push(i);\n        } else if (this.state.handRank[i] === min) {\n          winArr.push(i);\n        }\n      }\n    }\n  } // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\n\n\n  giveHandRanking(order) {\n    if (order[0] === order[1] === order[2]) {\n      this.setState({\n        handRank: this.state.handRank.concat(1)\n      });\n    } else if (order[0].includes('A') && order[0].includes('K') && order[0].includes('Q')) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0].includes('K') && order[0].includes('Q') && order[0].includes('J')) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0].includes('Q') && order[0].includes('J') && order[0].includes('10')) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0].includes('J') && order[0].includes('10') && order[0].includes('9')) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0].includes('10') && order[0].includes('9') && order[0].includes('8')) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0][0] < 10 && order[1][0] === order[0][0] - 1 && order[2][0] === order[0][0] - 2) {\n      this.setState({\n        handRank: this.state.handRank.concat(2)\n      });\n    } else if (order[0] === order[1] || order[0] === order[2] || order[2] === order[1]) {\n      this.setState({\n        handRank: this.state.handRank.concat(3)\n      });\n    } else {\n      this.setState({\n        handRank: this.state.handRank.concat(4)\n      });\n    }\n  }\n\n  arrangeOrder(char) {\n    var order = [];\n    var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1;\n    var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2;\n    var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3;\n    order.push(card1, card2, card3);\n    order.sort();\n\n    if (order[0] !== order[1] && order[1] === order[2]) {\n      var card = order.splice(0, 1);\n      order.splice(2, 0, card);\n    }\n\n    return order;\n  }\n\n  getCardValue(card) {\n    let cardMap = new Map([['A', 14], ['K', 13], ['Q', 12], ['J', 11], ['10', 10], ['9', 9], ['8', 8], ['7', 7], ['6', 6], ['5', 5], ['4', 4], ['3', 3], ['2', 2]]);\n    var cardValue = 0;\n\n    if (!card.includes('10')) {\n      cardValue = cardMap.get(card[0]);\n    } else {\n      cardValue = cardMap.get(card.substring(0, 2));\n    }\n\n    return cardValue;\n  }\n\n  distributeCards() {\n    var imageSourceList = ['2C', '2D', '2H', '2S', '3C', '3D', '3H', '3S', '4C', '4D', '4H', '4S', '5C', '5D', '5H', '5S', '6C', '6D', '6H', '6S', '7C', '7D', '7H', '7S', '8C', '8D', '8H', '8S', '9C', '9D', '9H', '9S', '10C', '10D', '10H', '10S', 'JC', 'JD', 'JH', 'JS', 'QC', 'QD', 'QH', 'QS', 'KC', 'KD', 'KH', 'KS', 'AC', 'AD', 'AH', 'AS']; //for seat A\n\n    var randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    var randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA1: require('../test/cards-png/' + randomCard + '.png'),\n      cardA1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA2: require('../test/cards-png/' + randomCard + '.png'),\n      cardA2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageA3: require('../test/cards-png/' + randomCard + '.png'),\n      cardA3: this.getCardValue(randomCard)\n    }); //for seat B\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB1: require('../test/cards-png/' + randomCard + '.png'),\n      cardB1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB2: require('../test/cards-png/' + randomCard + '.png'),\n      cardB2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageB3: require('../test/cards-png/' + randomCard + '.png'),\n      cardB3: this.getCardValue(randomCard)\n    }); //for seat C\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC1: require('../test/cards-png/' + randomCard + '.png'),\n      cardC1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC2: require('../test/cards-png/' + randomCard + '.png'),\n      cardC2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageC3: require('../test/cards-png/' + randomCard + '.png'),\n      cardC3: this.getCardValue(randomCard)\n    }); //for seat D\n\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD1: require('../test/cards-png/' + randomCard + '.png'),\n      cardD1: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD2: require('../test/cards-png/' + randomCard + '.png'),\n      cardD2: this.getCardValue(randomCard)\n    });\n    randomIndex = Math.floor(Math.random() * imageSourceList.length);\n    randomCard = imageSourceList.splice(randomIndex, 1)[0];\n    this.setState({\n      imageD3: require('../test/cards-png/' + randomCard + '.png'),\n      cardD3: this.getCardValue(randomCard)\n    });\n  }\n\n  handleCheck() {\n    this.distributeCards();\n    this.setState({\n      check: true\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      check: false\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        alignItems: \"center\",\n        background: \"#777\"\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleCheck(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleResult(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"New Hand\")))));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:\\Project\\demo-react\\src\\component\\test\\Test.js"],"names":["React","Component","Container","Card","Row","Col","CardBack","require","Test","constructor","props","state","check","imageA1","imageA2","imageA3","imageB1","imageB2","imageB3","imageC1","imageC2","imageC3","imageD1","imageD2","imageD3","cardA1","cardA2","cardA3","cardB1","cardB2","cardB3","cardC1","cardC2","cardC3","cardD1","cardD2","cardD3","handRank","winner","handleCheck","bind","handleReset","handleResult","map","A","K","Q","J","orderA","arrangeOrder","orderB","orderC","orderD","giveHandRanking","min","winArr","max","i","includes","toString","get","setState","concat","substring","length","push","order","char","card1","card2","card3","sort","card","splice","getCardValue","cardMap","Map","cardValue","distributeCards","imageSourceList","randomIndex","Math","floor","random","randomCard","render","alignItems","background","marginLeft","textAlign","width","height","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,iBAA1C;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,gCAAD,CAAtB;;AAGA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACzBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KADE;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,OAAO,EAAE,EAPA;AAQTC,MAAAA,OAAO,EAAE,EARA;AASTC,MAAAA,OAAO,EAAE,EATA;AAUTC,MAAAA,OAAO,EAAE,EAVA;AAWTC,MAAAA,OAAO,EAAE,EAXA;AAYTC,MAAAA,OAAO,EAAE,EAZA;AAaTC,MAAAA,OAAO,EAAE,EAbA;AAcTC,MAAAA,MAAM,EAAE,EAdC;AAeTC,MAAAA,MAAM,EAAE,EAfC;AAgBTC,MAAAA,MAAM,EAAE,EAhBC;AAiBTC,MAAAA,MAAM,EAAE,EAjBC;AAkBTC,MAAAA,MAAM,EAAE,EAlBC;AAmBTC,MAAAA,MAAM,EAAE,EAnBC;AAoBTC,MAAAA,MAAM,EAAE,EApBC;AAqBTC,MAAAA,MAAM,EAAE,EArBC;AAsBTC,MAAAA,MAAM,EAAE,EAtBC;AAuBTC,MAAAA,MAAM,EAAE,EAvBC;AAwBTC,MAAAA,MAAM,EAAE,EAxBC;AAyBTC,MAAAA,MAAM,EAAE,EAzBC;AA0BTC,MAAAA,QAAQ,EAAE,EA1BD;AA2BTC,MAAAA,MAAM,EAAE;AA3BC,KAAb;AA6BA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDE,EAAAA,YAAY,GAAG;AACX,QAAIC,GAAG,GAAG;AACNC,MAAAA,CAAC,EAAE,EADG;AAENC,MAAAA,CAAC,EAAE,EAFG;AAGNC,MAAAA,CAAC,EAAE,EAHG;AAINC,MAAAA,CAAC,EAAE;AAJG,KAAV;AAMA,QAAIC,MAAM,GAAG,KAAKC,YAAL,CAAkB,GAAlB,CAAb;AACA,QAAIC,MAAM,GAAG,KAAKD,YAAL,CAAkB,GAAlB,CAAb;AACA,QAAIE,MAAM,GAAG,KAAKF,YAAL,CAAkB,GAAlB,CAAb;AACA,QAAIG,MAAM,GAAG,KAAKH,YAAL,CAAkB,GAAlB,CAAb;AACA,SAAKI,eAAL,CAAqB,KAAKJ,YAAL,CAAkB,GAAlB,CAArB;AACA,SAAKI,eAAL,CAAqB,KAAKJ,YAAL,CAAkB,GAAlB,CAArB;AACA,SAAKI,eAAL,CAAqB,KAAKJ,YAAL,CAAkB,GAAlB,CAArB;AACA,SAAKI,eAAL,CAAqB,KAAKJ,YAAL,CAAkB,GAAlB,CAArB;AACA,QAAIK,GAAG,GAAG,KAAK3C,KAAL,CAAW0B,QAAX,CAAoB,CAApB,CAAV;AACA,QAAIkB,MAAM,GAAG,IAAb;;AACA,QAAI,KAAK5C,KAAL,CAAW0B,QAAX,CAAoB,CAApB,MAA2B,KAAK1B,KAAL,CAAW0B,QAAX,CAAoB,CAApB,CAA3B,KAAsD,KAAK1B,KAAL,CAAW0B,QAAX,CAAoB,CAApB,CAAtD,KAAiF,KAAK1B,KAAL,CAAW0B,QAAX,CAAoB,CAApB,CAArF,EAA6G;AACzG,UAAG,KAAK1B,KAAL,CAAW0B,QAAX,CAAoB,CAApB,MAA2B,CAA9B,EAAgC;AAC5B,YAAImB,GAAG,GAAG,CAAV;;AACA,aAAI,IAAIC,CAAR,IAAad,GAAb,EAAiB;AACb,cAAG,CAACK,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,CAAD,IAA2BV,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBS,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH;;AACD,cAAG,CAACZ,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmB,EAAnB,CAAD,IAA2BR,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBO,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAGZ,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmB,EAAnB,KAA0BR,MAAM,CAAC,CAAD,CAAN,CAAUa,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH;;AACD,cAAG,CAACX,MAAM,CAAC,CAAD,CAAN,CAAUO,QAAV,CAAmB,EAAnB,CAAD,IAA2BP,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBM,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAGX,MAAM,CAAC,CAAD,CAAN,CAAUO,QAAV,CAAmB,EAAnB,KAA0BP,MAAM,CAAC,CAAD,CAAN,CAAUY,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH;;AACD,cAAG,CAACV,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAV,CAAmB,EAAnB,CAAD,IAA2BN,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBK,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH;AACJ;AACJ,OA5DD,MA6DK,IAAG,KAAKnD,KAAL,CAAW0B,QAAX,CAAoB,CAApB,MAA2B,CAA9B,EAAgC;AACjC,YAAImB,GAAG,GAAG,CAAV;;AACA,aAAI,IAAIC,CAAR,IAAad,GAAb,EAAiB;AACb,cAAG,CAACK,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,CAAD,IAA2BV,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBS,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAlF,EAA6F;AAC9FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH,WALI,MAMA,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WANI,MAOA,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAlF,EAA6F;AAC9FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH;;AACD,cAAG,CAACZ,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmB,EAAnB,CAAD,IAA2BR,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBO,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAG,CAACZ,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmB,EAAnB,CAAD,IAA2BR,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBO,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAvE,EAAkF;AACnFD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH,WALI,MAMA,IAAGZ,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmB,EAAnB,KAA0BR,MAAM,CAAC,CAAD,CAAN,CAAUa,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WANI,MAOA,IAAGZ,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmB,EAAnB,KAA0BR,MAAM,CAAC,CAAD,CAAN,CAAUa,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAlF,EAA6F;AAC9FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH;;AACD,cAAG,CAACX,MAAM,CAAC,CAAD,CAAN,CAAUO,QAAV,CAAmB,EAAnB,CAAD,IAA2BP,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBM,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAG,CAACX,MAAM,CAAC,CAAD,CAAN,CAAUO,QAAV,CAAmB,EAAnB,CAAD,IAA2BP,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBM,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAvE,EAAkF;AACnFD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH,WALI,MAMA,IAAGX,MAAM,CAAC,CAAD,CAAN,CAAUO,QAAV,CAAmB,EAAnB,KAA0BP,MAAM,CAAC,CAAD,CAAN,CAAUY,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WANI,MAOA,IAAGX,MAAM,CAAC,CAAD,CAAN,CAAUO,QAAV,CAAmB,EAAnB,KAA0BP,MAAM,CAAC,CAAD,CAAN,CAAUY,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAlF,EAA6F;AAC9FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH;;AACD,cAAG,CAACV,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAV,CAAmB,EAAnB,CAAD,IAA2BN,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBK,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAArE,EAAgF;AAC5ED,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WAND,MAOK,IAAG,CAACV,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAV,CAAmB,EAAnB,CAAD,IAA2BN,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,MAAiBK,CAAC,CAACE,QAAF,EAA5C,IAA4DH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAvE,EAAkF;AACnFD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH,WALI,MAMA,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAhF,EAA2F;AAC5FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,EADC;AAEVA,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AAFC,aAAd;AAIH,WANI,MAOA,IAAGd,MAAM,CAAC,CAAD,CAAN,CAAUU,QAAV,CAAmB,EAAnB,KAA0BV,MAAM,CAAC,CAAD,CAAN,CAAUe,SAAV,CAAoB,CAApB,EAAsB,CAAtB,MAA6BN,CAAC,CAACE,QAAF,EAAvD,IAAuEH,GAAG,KAAKb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAlF,EAA6F;AAC9FD,YAAAA,GAAG,GAAGb,GAAG,CAACiB,GAAJ,CAAQH,CAAR,CAAN;AACA,iBAAKI,QAAL,CAAc;AACVvB,cAAAA,MAAM,EAAG,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBwB,MAAlB,CAAyB,GAAzB;AADC,aAAd;AAGH;AACJ;AACJ;AACJ,KA3KD,MA4KK;AACD,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK9C,KAAL,CAAW0B,QAAX,CAAoB2B,MAAxC,EAAgDP,CAAC,EAAjD,EAAqD;AACjD,YAAI,KAAK9C,KAAL,CAAW0B,QAAX,CAAoBoB,CAApB,IAAyBH,GAA7B,EAAkC;AAC9BA,UAAAA,GAAG,GAAG,KAAK3C,KAAL,CAAW0B,QAAX,CAAoBoB,CAApB,CAAN;AACAF,UAAAA,MAAM,GAAG,EAAT;AACAA,UAAAA,MAAM,CAACU,IAAP,CAAYR,CAAZ;AACH,SAJD,MAKK,IAAI,KAAK9C,KAAL,CAAW0B,QAAX,CAAoBoB,CAApB,MAA2BH,GAA/B,EAAoC;AACrCC,UAAAA,MAAM,CAACU,IAAP,CAAYR,CAAZ;AACH;AACJ;AACJ;AACJ,GA9OwB,CAgPzB;;;AACAJ,EAAAA,eAAe,CAACa,KAAD,EAAQ;AACnB,QAAIA,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAlB,KAA0BA,KAAK,CAAC,CAAD,CAAnC,EAAwC;AACpC,WAAKL,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJD,MAKK,IAAII,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,KAA0BQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAA1B,IAAoDQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAAxD,EAAgF;AACjF,WAAKG,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA,IAAII,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,KAA0BQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAA1B,IAAoDQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAAxD,EAAgF;AACjF,WAAKG,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA,IAAII,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,KAA0BQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAA1B,IAAoDQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,IAAlB,CAAxD,EAAiF;AAClF,WAAKG,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA,IAAII,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,KAA0BQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,IAAlB,CAA1B,IAAqDQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAAzD,EAAiF;AAClF,WAAKG,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA,IAAII,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,IAAlB,KAA2BQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAA3B,IAAqDQ,KAAK,CAAC,CAAD,CAAL,CAASR,QAAT,CAAkB,GAAlB,CAAzD,EAAiF;AAClF,WAAKG,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA,IAAII,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,EAAd,IAAoBA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,MAAgBA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,CAAlD,IAAuDA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,MAAgBA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,CAAzF,EAA4F;AAC7F,WAAKL,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA,IAAII,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAlB,IAAyBA,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAA3C,IAAkDA,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAxE,EAA6E;AAC9E,WAAKL,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH,KAJI,MAKA;AACD,WAAKD,QAAL,CAAc;AACVxB,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAW0B,QAAX,CAAoByB,MAApB,CAA2B,CAA3B;AADA,OAAd;AAGH;AACJ;;AAEDb,EAAAA,YAAY,CAACkB,IAAD,EAAO;AACf,QAAID,KAAK,GAAG,EAAZ;AACA,QAAIE,KAAK,GAAGD,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWc,MAA1B,GAAmC0C,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWiB,MAA1B,GAAmCuC,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWoB,MAA1B,GAAmC,KAAKpB,KAAL,CAAWuB,MAAhI;AACA,QAAImC,KAAK,GAAGF,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWe,MAA1B,GAAmCyC,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWkB,MAA1B,GAAmCsC,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWqB,MAA1B,GAAmC,KAAKrB,KAAL,CAAWwB,MAAhI;AACA,QAAImC,KAAK,GAAGH,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWgB,MAA1B,GAAmCwC,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWmB,MAA1B,GAAmCqC,IAAI,KAAK,GAAT,GAAe,KAAKxD,KAAL,CAAWsB,MAA1B,GAAmC,KAAKtB,KAAL,CAAWyB,MAAhI;AACA8B,IAAAA,KAAK,CAACD,IAAN,CAAWG,KAAX,EAAiBC,KAAjB,EAAuBC,KAAvB;AACAJ,IAAAA,KAAK,CAACK,IAAN;;AACA,QAAIL,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAnB,IAA4BA,KAAK,CAAC,CAAD,CAAL,KAAaA,KAAK,CAAC,CAAD,CAAjD,EAAsD;AAClD,UAAIM,IAAI,GAAGN,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAX;AACAP,MAAAA,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmBD,IAAnB;AACH;;AACD,WAAON,KAAP;AACH;;AAEDQ,EAAAA,YAAY,CAACF,IAAD,EAAM;AACd,QAAIG,OAAO,GAAG,IAAIC,GAAJ,CAAQ,CAAE,CAAC,GAAD,EAAM,EAAN,CAAF,EAAY,CAAC,GAAD,EAAM,EAAN,CAAZ,EAAsB,CAAC,GAAD,EAAM,EAAN,CAAtB,EAAgC,CAAC,GAAD,EAAM,EAAN,CAAhC,EAA0C,CAAC,IAAD,EAAO,EAAP,CAA1C,EAAqD,CAAC,GAAD,EAAM,CAAN,CAArD,EAA8D,CAAC,GAAD,EAAM,CAAN,CAA9D,EAAuE,CAAC,GAAD,EAAM,CAAN,CAAvE,EAAgF,CAAC,GAAD,EAAM,CAAN,CAAhF,EAAyF,CAAC,GAAD,EAAM,CAAN,CAAzF,EAAkG,CAAC,GAAD,EAAM,CAAN,CAAlG,EAA2G,CAAC,GAAD,EAAM,CAAN,CAA3G,EAAoH,CAAC,GAAD,EAAM,CAAN,CAApH,CAAR,CAAd;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,QAAG,CAACL,IAAI,CAACd,QAAL,CAAc,IAAd,CAAJ,EAAwB;AACpBmB,MAAAA,SAAS,GAAGF,OAAO,CAACf,GAAR,CAAYY,IAAI,CAAC,CAAD,CAAhB,CAAZ;AACH,KAFD,MAGI;AACAK,MAAAA,SAAS,GAAGF,OAAO,CAACf,GAAR,CAAYY,IAAI,CAACT,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAZ,CAAZ;AACH;;AACD,WAAOc,SAAP;AACH;;AAEDC,EAAAA,eAAe,GAAG;AACd,QAAIC,eAAe,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,EAAuG,IAAvG,EAA6G,IAA7G,EAAmH,IAAnH,EAAyH,IAAzH,EAA+H,IAA/H,EAAqI,IAArI,EAA2I,IAA3I,EAAiJ,IAAjJ,EAAuJ,IAAvJ,EAA6J,IAA7J,EAAmK,IAAnK,EAAyK,IAAzK,EAA+K,IAA/K,EAAqL,IAArL,EAA2L,IAA3L,EAAiM,KAAjM,EAAwM,KAAxM,EAA+M,KAA/M,EAAsN,KAAtN,EAA6N,IAA7N,EAAmO,IAAnO,EAAyO,IAAzO,EAA+O,IAA/O,EAAqP,IAArP,EAA2P,IAA3P,EAAiQ,IAAjQ,EAAuQ,IAAvQ,EAA6Q,IAA7Q,EAAmR,IAAnR,EAAyR,IAAzR,EAA+R,IAA/R,EAAqS,IAArS,EAA2S,IAA3S,EAAiT,IAAjT,EAAuT,IAAvT,CAAtB,CADc,CAGd;;AACA,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAlB;AACA,QAAIoB,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAjB;AACA,SAAKnB,QAAL,CAAc;AAAEhD,MAAAA,OAAO,EAAEN,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgE3D,MAAAA,MAAM,EAAE,KAAKiD,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAE/C,MAAAA,OAAO,EAAEP,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgE1D,MAAAA,MAAM,EAAE,KAAKgD,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAE9C,MAAAA,OAAO,EAAER,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEzD,MAAAA,MAAM,EAAE,KAAK+C,YAAL,CAAkBU,UAAlB;AAAxE,KAAd,EAdc,CAgBd;;AACAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAE7C,MAAAA,OAAO,EAAET,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgExD,MAAAA,MAAM,EAAE,KAAK8C,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAE5C,MAAAA,OAAO,EAAEV,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEvD,MAAAA,MAAM,EAAE,KAAK6C,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAE3C,MAAAA,OAAO,EAAEX,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEtD,MAAAA,MAAM,EAAE,KAAK4C,YAAL,CAAkBU,UAAlB;AAAxE,KAAd,EA3Bc,CA6Bd;;AACAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAE1C,MAAAA,OAAO,EAAEZ,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgErD,MAAAA,MAAM,EAAE,KAAK2C,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAEzC,MAAAA,OAAO,EAAEb,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEpD,MAAAA,MAAM,EAAE,KAAK0C,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAExC,MAAAA,OAAO,EAAEd,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEnD,MAAAA,MAAM,EAAE,KAAKyC,YAAL,CAAkBU,UAAlB;AAAxE,KAAd,EAxCc,CA0Cd;;AACAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAEvC,MAAAA,OAAO,EAAEf,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgElD,MAAAA,MAAM,EAAE,KAAKwC,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAEtC,MAAAA,OAAO,EAAEhB,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEjD,MAAAA,MAAM,EAAE,KAAKuC,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AAEAJ,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,eAAe,CAACf,MAA3C,CAAd;AACAoB,IAAAA,UAAU,GAAGL,eAAe,CAACN,MAAhB,CAAuBO,WAAvB,EAAoC,CAApC,EAAuC,CAAvC,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAErC,MAAAA,OAAO,EAAEjB,OAAO,CAAC,uBAAuB6E,UAAvB,GAAoC,MAArC,CAAlB;AAAgEhD,MAAAA,MAAM,EAAE,KAAKsC,YAAL,CAAkBU,UAAlB;AAAxE,KAAd;AACH;;AAED7C,EAAAA,WAAW,GAAG;AACV,SAAKuC,eAAL;AACA,SAAKjB,QAAL,CAAc;AACVjD,MAAAA,KAAK,EAAE;AADG,KAAd;AAGH;;AAED6B,EAAAA,WAAW,GAAG;AACV,SAAKoB,QAAL,CAAc;AACVjD,MAAAA,KAAK,EAAE;AADG,KAAd;AAGH;;AAEDyE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,QAAd;AAAwBC,QAAAA,UAAU,EAAE;AAApC,OAAlB;AAAgE,MAAA,KAAK,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAK9E,KAAL,CAAWC,KAAZ,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAFR,EAcK,KAAKhF,KAAL,CAAWC,KAAX,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWE,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAE6E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWG,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAE4E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWI,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAE2E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAfR,CAHJ,EAgCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,CADJ,EAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCJ,EAqCI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEH,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAK9E,KAAL,CAAWC,KAAZ,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAFR,EAcK,KAAKhF,KAAL,CAAWC,KAAX,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWK,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAE0E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWM,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEyE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWO,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEwE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAfR,CADJ,EA6BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EA+BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAE;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAK9E,KAAL,CAAWC,KAAZ,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAFR,EAcK,KAAKhF,KAAL,CAAWC,KAAX,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWQ,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEuE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWS,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEsE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWU,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEqE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAfR,CA/BJ,CArCJ,EAiGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjGJ,EAkGI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEH,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAK9E,KAAL,CAAWC,KAAZ,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE,8BAA1C;AAA0EJ,QAAAA,UAAU,EAAE;AAAtF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAElF,QAAf;AAAyB,MAAA,KAAK,EAAE;AAAEoF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAFR,EAcK,KAAKhF,KAAL,CAAWC,KAAX,IACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8E,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWW,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEoE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWY,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEmE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,KAAKjF,KAAL,CAAWa,OAA1B;AAAmC,MAAA,KAAK,EAAE;AAAEkE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAfR,CAHJ,EA+BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKpD,WAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKG,YAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CA/BJ,CAlGJ,CADJ,CADJ;AA+IH;;AAhhBwB;;AAmhB7B,eAAejC,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './Test.css'\r\nimport { Container, Card, Row, Col } from 'react-bootstrap'\r\nvar CardBack = require('../test/cards-png/red_back.png');\r\n\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            imageA1: '',\r\n            imageA2: '',\r\n            imageA3: '',\r\n            imageB1: '',\r\n            imageB2: '',\r\n            imageB3: '',\r\n            imageC1: '',\r\n            imageC2: '',\r\n            imageC3: '',\r\n            imageD1: '',\r\n            imageD2: '',\r\n            imageD3: '',\r\n            cardA1: '',\r\n            cardA2: '',\r\n            cardA3: '',\r\n            cardB1: '',\r\n            cardB2: '',\r\n            cardB3: '',\r\n            cardC1: '',\r\n            cardC2: '',\r\n            cardC3: '',\r\n            cardD1: '',\r\n            cardD2: '',\r\n            cardD3: '',\r\n            handRank: [],\r\n            winner: [],\r\n        };\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleResult = this.handleResult.bind(this);\r\n    }\r\n\r\n    handleResult() {\r\n        var map = {\r\n            A: 14,\r\n            K: 13,\r\n            Q: 12,\r\n            J: 11\r\n        }\r\n        var orderA = this.arrangeOrder(\"A\")\r\n        var orderB = this.arrangeOrder(\"B\")\r\n        var orderC = this.arrangeOrder(\"C\")\r\n        var orderD = this.arrangeOrder(\"D\")\r\n        this.giveHandRanking(this.arrangeOrder(\"A\"))\r\n        this.giveHandRanking(this.arrangeOrder(\"B\"))\r\n        this.giveHandRanking(this.arrangeOrder(\"C\"))\r\n        this.giveHandRanking(this.arrangeOrder(\"D\"))\r\n        var min = this.state.handRank[0]\r\n        var winArr = null\r\n        if (this.state.handRank[0] === this.state.handRank[1] === this.state.handRank[2] === this.state.handRank[3]) {\r\n            if(this.state.handRank[0] === 1){\r\n                var max = 2\r\n                for(var i in map){\r\n                    if(!orderA[0].includes(10) && orderA[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('A')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('A')\r\n                        })\r\n                    }\r\n                    if(!orderB[0].includes(10) && orderB[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('B')\r\n                        })\r\n                    }\r\n                    else if(orderB[0].includes(10) && orderB[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('B')\r\n                        })\r\n                    }\r\n                    if(!orderC[0].includes(10) && orderC[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('C')\r\n                        })\r\n                    }\r\n                    else if(orderC[0].includes(10) && orderC[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('C')\r\n                        })\r\n                    }\r\n                    if(!orderD[0].includes(10) && orderD[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('D')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('D')\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            else if(this.state.handRank[0] === 2){\r\n                var max = 4\r\n                for(var i in map){\r\n                    if(!orderA[0].includes(10) && orderA[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('A')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('A')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('A')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('A')\r\n                        })\r\n                    }\r\n                    if(!orderB[0].includes(10) && orderB[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('B')\r\n                        })\r\n                    }\r\n                    else if(!orderB[0].includes(10) && orderB[0][0] === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('B')\r\n                        })\r\n                    }\r\n                    else if(orderB[0].includes(10) && orderB[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('B')\r\n                        })\r\n                    }\r\n                    else if(orderB[0].includes(10) && orderB[0].substring(0,2) === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('B')\r\n                        })\r\n                    }\r\n                    if(!orderC[0].includes(10) && orderC[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('C')\r\n                        })\r\n                    }\r\n                    else if(!orderC[0].includes(10) && orderC[0][0] === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('C')\r\n                        })\r\n                    }\r\n                    else if(orderC[0].includes(10) && orderC[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('C')\r\n                        })\r\n                    }\r\n                    else if(orderC[0].includes(10) && orderC[0].substring(0,2) === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('C')\r\n                        })\r\n                    }\r\n                    if(!orderD[0].includes(10) && orderD[0][0] === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('D')\r\n                        })\r\n                    }\r\n                    else if(!orderD[0].includes(10) && orderD[0][0] === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('D')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max < map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : [],\r\n                            winner : this.state.winner.concat('D')\r\n                        })\r\n                    }\r\n                    else if(orderA[0].includes(10) && orderA[0].substring(0,2) === i.toString() && max === map.get(i)){\r\n                        max = map.get(i)\r\n                        this.setState({\r\n                            winner : this.state.winner.concat('D')\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.state.handRank.length; i++) {\r\n                if (this.state.handRank[i] < min) {\r\n                    min = this.state.handRank[i]\r\n                    winArr = []\r\n                    winArr.push(i)\r\n                }\r\n                else if (this.state.handRank[i] === min) {\r\n                    winArr.push(i)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\r\n    giveHandRanking(order) {\r\n        if (order[0] === order[1] === order[2]) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(1)\r\n            })\r\n        }\r\n        else if (order[0].includes('A') && order[0].includes('K') && order[0].includes('Q')) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if (order[0].includes('K') && order[0].includes('Q') && order[0].includes('J')) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if (order[0].includes('Q') && order[0].includes('J') && order[0].includes('10')) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if (order[0].includes('J') && order[0].includes('10') && order[0].includes('9')) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if (order[0].includes('10') && order[0].includes('9') && order[0].includes('8')) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if (order[0][0] < 10 && order[1][0] === order[0][0] - 1 && order[2][0] === order[0][0] - 2) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(2)\r\n            })\r\n        }\r\n        else if (order[0] === order[1] || order[0] === order[2] || order[2] === order[1]) {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(3)\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                handRank: this.state.handRank.concat(4)\r\n            })\r\n        }\r\n    }\r\n\r\n    arrangeOrder(char) {\r\n        var order = []\r\n        var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1\r\n        var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2\r\n        var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3\r\n        order.push(card1,card2,card3)\r\n        order.sort()\r\n        if((order[0] !== order[1]) && (order[1] === order[2])){\r\n            var card = order.splice(0, 1)\r\n            order.splice(2, 0, card)\r\n        }\r\n        return order;\r\n    }\r\n\r\n    getCardValue(card){\r\n        let cardMap = new Map([ ['A', 14],['K', 13],['Q', 12],['J', 11],['10', 10],['9', 9],['8', 8],['7', 7],['6', 6],['5', 5],['4', 4],['3', 3],['2', 2] ]);\r\n        var cardValue = 0;\r\n        if(!card.includes('10')){\r\n            cardValue = cardMap.get(card[0])\r\n        }\r\n        else{\r\n            cardValue = cardMap.get(card.substring(0,2))\r\n        }\r\n        return cardValue;\r\n    }\r\n\r\n    distributeCards() {\r\n        var imageSourceList = ['2C', '2D', '2H', '2S', '3C', '3D', '3H', '3S', '4C', '4D', '4H', '4S', '5C', '5D', '5H', '5S', '6C', '6D', '6H', '6S', '7C', '7D', '7H', '7S', '8C', '8D', '8H', '8S', '9C', '9D', '9H', '9S', '10C', '10D', '10H', '10S', 'JC', 'JD', 'JH', 'JS', 'QC', 'QD', 'QH', 'QS', 'KC', 'KD', 'KH', 'KS', 'AC', 'AD', 'AH', 'AS']\r\n\r\n        //for seat A\r\n        var randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        var randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA1: require('../test/cards-png/' + randomCard + '.png'), cardA1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA2: require('../test/cards-png/' + randomCard + '.png'), cardA2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageA3: require('../test/cards-png/' + randomCard + '.png'), cardA3: this.getCardValue(randomCard) })\r\n\r\n        //for seat B\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB1: require('../test/cards-png/' + randomCard + '.png'), cardB1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB2: require('../test/cards-png/' + randomCard + '.png'), cardB2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageB3: require('../test/cards-png/' + randomCard + '.png'), cardB3: this.getCardValue(randomCard) })\r\n\r\n        //for seat C\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC1: require('../test/cards-png/' + randomCard + '.png'), cardC1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC2: require('../test/cards-png/' + randomCard + '.png'), cardC2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageC3: require('../test/cards-png/' + randomCard + '.png'), cardC3: this.getCardValue(randomCard) })\r\n\r\n        //for seat D\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD1: require('../test/cards-png/' + randomCard + '.png'), cardD1: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD2: require('../test/cards-png/' + randomCard + '.png'), cardD2: this.getCardValue(randomCard) })\r\n\r\n        randomIndex = Math.floor(Math.random() * imageSourceList.length);\r\n        randomCard = imageSourceList.splice(randomIndex, 1)[0];\r\n        this.setState({ imageD3: require('../test/cards-png/' + randomCard + '.png'), cardD3: this.getCardValue(randomCard) })\r\n    }\r\n\r\n    handleCheck() {\r\n        this.distributeCards()\r\n        this.setState({\r\n            check: true\r\n        });\r\n    }\r\n\r\n    handleReset() {\r\n        this.setState({\r\n            check: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{ alignItems: \"center\", background: \"#777\" }} fluid>\r\n                <div className=\"card-board\">\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <button type=\"button\" onClick={() => this.handleCheck()}>Check</button>\r\n                            <br />\r\n                            <button type=\"button\" onClick={() => this.handleResult()}>Result</button>\r\n                            <br />\r\n                            <button type=\"button\" onClick={() => this.handleReset()}>New Hand</button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n"]},"metadata":{},"sourceType":"module"}