{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\Card-Game\\\\cardgame-react\\\\src\\\\component\\\\card-table\\\\CardTable.js\";\nimport React, { Component } from 'react';\nimport './CardTable.css';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\nimport { getCards, getResult, addImages, clearData } from './CardTableAction';\nimport { connect } from 'react-redux';\nimport Store from '../redux/Store';\n\nvar CardBack = require('../cards-png/red_back.png');\n\nvar wallImage = require('../cards-png/playing_card.jpg');\n\nvar CardBack = require('../cards-png/red_back.png');\n\nvar winImage = require('../cards-png/winner.png');\n\nclass CardTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      showCheck: true,\n      showResult: false,\n      showNewHand: false\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n    this.createFrontCardDiv = this.createFrontCardDiv.bind(this);\n    this.createBackCardDiv = this.createBackCardDiv.bind(this);\n  }\n\n  componentDidMount() {\n    this.distributeCards();\n  }\n\n  getWinnerName() {\n    var winners = Store.getState().cardTable.winners;\n    var winnerName = '';\n\n    if (winners.length === 1) {\n      winnerName = winners[0].name + ' Wins';\n    } else {\n      for (var i = 0; i < winners.length; i++) {\n        if (i !== 0) {\n          winnerName = winnerName + ', ' + winners[i].name;\n        } else winnerName = winners[i].name;\n      }\n\n      winnerName = winnerName + ' Ties';\n    }\n\n    return React.createElement(\"h2\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, winnerName);\n  }\n\n  getWinnersHand() {\n    var winners = Store.getState().cardTable.winners;\n    var hands = [];\n    var sortedhand = winners[0].hand;\n    sortedhand.sort(function (a, b) {\n      return b - a;\n    });\n\n    for (var i = 0; i < 3; i++) {\n      switch (sortedhand[i]) {\n        case 1:\n          hands.push('Ace');\n          break;\n\n        case 2:\n          hands.push('Two');\n          break;\n\n        case 3:\n          hands.push('Three');\n          break;\n\n        case 4:\n          hands.push('Four');\n          break;\n\n        case 5:\n          hands.push('Five');\n          break;\n\n        case 6:\n          hands.push('Six');\n          break;\n\n        case 7:\n          hands.push('Seven');\n          break;\n\n        case 8:\n          hands.push('Eight');\n          break;\n\n        case 9:\n          hands.push('Nine');\n          break;\n\n        case 10:\n          hands.push('ten');\n          break;\n\n        case 11:\n          hands.push('Jack');\n          break;\n\n        case 12:\n          hands.push('Queen');\n          break;\n\n        case 13:\n          hands.push('King');\n          break;\n\n        case 14:\n          hands.push('Ace');\n          break;\n      }\n    }\n\n    var handName = '';\n\n    if (winners[0].handRank === 1) {\n      handName = 'With all cards same of ' + hands[0];\n    } else if (winners[0].handRank === 2) {\n      handName = 'With straight sequence of ' + hands[0] + ', ' + hands[1] + ', ' + hands[2];\n    } else if (winners[0].handRank === 3) {\n      handName = 'With pair of ' + (hands[0] !== hands[1] ? hands[1] : hands[0]) + ' and ' + (hands[0] !== hands[1] ? hands[0] : hands[2]);\n    } else if (winners[0].handRank === 4) {\n      handName = 'With highest card of ' + hands[0] + ', ' + hands[1] + ' and ' + hands[2];\n    }\n\n    return React.createElement(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, handName);\n  }\n\n  handleResult() {\n    const cardList = Store.getState().cardTable.cards;\n    const names = Store.getState().main;\n    const nameList = [];\n    nameList.push(names.player1);\n    nameList.push(names.player2);\n    nameList.push(names.player3);\n    nameList.push(names.player4);\n    console.log(nameList);\n    const card = {\n      cards: cardList,\n      names: nameList\n    };\n    this.setState({\n      showCheck: false,\n      showResult: false,\n      showNewHand: true\n    });\n    this.props.getResult(card);\n  }\n\n  distributeCards() {\n    this.props.getCards();\n  }\n\n  handleCheck() {\n    const cards = this.props.cardTable.cards;\n    var imageList = [];\n\n    for (var i = 0; i < cards.length; i++) {\n      imageList.push(require(\"../cards-png/\" + cards[i] + \".png\"));\n    }\n\n    this.props.addImages(imageList);\n    this.setState({\n      check: true,\n      showResult: true,\n      showCheck: false,\n      showNewHand: false\n    });\n  }\n\n  createFrontCardDiv(images, index) {\n    var divFrontCard = [];\n\n    for (var i = index; i < index + 3; i++) {\n      divFrontCard.push(React.createElement(Card, {\n        style: {\n          width: '6rem',\n          height: '9rem',\n          border: '2px solid rgb(221, 221, 224)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        src: images[i],\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })));\n    }\n\n    return divFrontCard;\n  }\n\n  createBackCardDiv() {\n    var divBackCard = [];\n\n    for (var i = 0; i < 3; i++) {\n      divBackCard.push(React.createElement(Card, {\n        style: {\n          width: '6rem',\n          height: '9rem',\n          border: '2px solid rgb(221, 221, 224)',\n          marginLeft: \"-5rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        src: CardBack,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })));\n    }\n\n    return divBackCard;\n  }\n\n  handleReset() {\n    this.distributeCards();\n    this.setState({\n      check: false,\n      showResult: false,\n      showCheck: true,\n      showNewHand: false\n    });\n    this.props.clearData();\n  }\n\n  render() {\n    const _this$props$cardTable = this.props.cardTable,\n          images = _this$props$cardTable.images,\n          winners = _this$props$cardTable.winners;\n    const _this$props$main = this.props.main,\n          player1 = _this$props$main.player1,\n          player2 = _this$props$main.player2,\n          player3 = _this$props$main.player3,\n          player4 = _this$props$main.player4;\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        alignItems: \"center\",\n        width: \"250%\",\n        backgroundImage: \"url(\".concat(wallImage, \")\"),\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        height: \"100%\"\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-board\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, player1 !== '' ? player1 : 'Seat 1'), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, player1))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 0))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, player2 !== '' ? player2 : 'Seat 2'), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, player2)), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, player3 !== '' ? player3 : 'Seat 3'), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, player3))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 3))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 6)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.createBackCardDiv()), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.createFrontCardDiv(images, 9))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, player4 !== '' ? player4 : 'Seat 4'), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, player4))))), React.createElement(Container, {\n      style: {\n        marginTop: \"70px\",\n        textAlign: \"center\",\n        fontFamily: \"Times New Roman, Times, serif\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, winners.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: winImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, this.getWinnerName())), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.getWinnersHand()))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: () => this.handleCheck(),\n      disabled: !this.state.showCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Check\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: () => this.handleResult(),\n      disabled: !this.state.showResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Result\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: () => this.handleReset(),\n      disabled: !this.state.showNewHand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"New Hand\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cardTable: state.cardTable,\n    main: state.main\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCards: () => dispatch(getCards()),\n    getResult: cardList => dispatch(getResult(cardList)),\n    addImages: imageList => dispatch(addImages(imageList)),\n    clearData: () => dispatch(clearData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardTable);","map":{"version":3,"sources":["C:\\Project\\Card-Game\\cardgame-react\\src\\component\\card-table\\CardTable.js"],"names":["React","Component","Container","Card","Row","Col","getCards","getResult","addImages","clearData","connect","Store","CardBack","require","wallImage","winImage","CardTable","constructor","props","state","check","showCheck","showResult","showNewHand","handleCheck","bind","handleReset","handleResult","createFrontCardDiv","createBackCardDiv","componentDidMount","distributeCards","getWinnerName","winners","getState","cardTable","winnerName","length","name","i","color","getWinnersHand","hands","sortedhand","hand","sort","a","b","push","handName","handRank","cardList","cards","names","main","nameList","player1","player2","player3","player4","console","log","card","setState","imageList","images","index","divFrontCard","width","height","border","divBackCard","marginLeft","render","display","alignItems","backgroundImage","backgroundRepeat","backgroundSize","textAlign","marginTop","fontFamily","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './CardTable.css'\r\nimport { Container, Card, Row, Col } from 'react-bootstrap'\r\nimport { getCards, getResult, addImages, clearData } from './CardTableAction';\r\nimport { connect } from 'react-redux';\r\nimport Store from '../redux/Store';\r\nvar CardBack = require('../cards-png/red_back.png');\r\nvar wallImage = require('../cards-png/playing_card.jpg');\r\nvar CardBack = require('../cards-png/red_back.png');\r\nvar winImage = require('../cards-png/winner.png');\r\n\r\nclass CardTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            showCheck: true,\r\n            showResult: false,\r\n            showNewHand: false\r\n        };\r\n        \r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleResult = this.handleResult.bind(this);\r\n        this.createFrontCardDiv = this.createFrontCardDiv.bind(this);\r\n        this.createBackCardDiv = this.createBackCardDiv.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.distributeCards();\r\n    }\r\n\r\n    getWinnerName(){\r\n        var winners = Store.getState().cardTable.winners\r\n        var winnerName = ''\r\n        \r\n        if(winners.length === 1){\r\n            winnerName = winners[0].name + ' Wins'\r\n        }\r\n        else {\r\n            for(var i = 0; i < winners.length; i++){\r\n                if(i !== 0) {\r\n                    winnerName = winnerName + ', ' + winners[i].name\r\n                }\r\n                else winnerName = winners[i].name\r\n            }\r\n            winnerName = winnerName +' Ties'\r\n        }\r\n        return(\r\n            <h2 style={{color: \"green\"}}>{winnerName}</h2>\r\n        )\r\n    }\r\n\r\n    getWinnersHand(){\r\n        var winners = Store.getState().cardTable.winners\r\n        var hands = []\r\n        var sortedhand = winners[0].hand\r\n        sortedhand.sort(function(a, b){return b - a})\r\n        for(var i=0; i< 3; i++){\r\n            switch(sortedhand[i]){\r\n                case 1:\r\n                    hands.push('Ace') \r\n                    break\r\n                case 2:\r\n                    hands.push('Two') \r\n                    break\r\n                case 3:\r\n                    hands.push('Three') \r\n                    break\r\n                case 4:\r\n                    hands.push('Four') \r\n                    break\r\n                case 5:\r\n                    hands.push('Five') \r\n                    break\r\n                case 6:\r\n                    hands.push('Six') \r\n                    break\r\n                case 7:\r\n                    hands.push('Seven') \r\n                    break\r\n                case 8:\r\n                    hands.push('Eight') \r\n                    break\r\n                case 9:\r\n                    hands.push('Nine') \r\n                    break\r\n                case 10:\r\n                    hands.push('ten') \r\n                    break\r\n                case 11:\r\n                    hands.push('Jack') \r\n                    break\r\n                case 12:\r\n                    hands.push('Queen') \r\n                    break\r\n                case 13:\r\n                    hands.push('King') \r\n                    break\r\n                case 14:\r\n                    hands.push('Ace') \r\n                    break\r\n            }\r\n        }\r\n        var handName = ''\r\n        if(winners[0].handRank === 1){\r\n            handName = 'With all cards same of ' + hands[0]\r\n        }\r\n        else if(winners[0].handRank === 2){\r\n            handName = 'With straight sequence of ' + hands[0] + ', ' + hands[1] + ', ' + hands[2]\r\n        }\r\n        else if(winners[0].handRank === 3){\r\n            handName = 'With pair of ' + (hands[0]!==hands[1] ? hands[1] : hands[0]) + ' and ' + (hands[0] !== hands[1] ? hands[0] : hands[2])\r\n        }\r\n        else if(winners[0].handRank === 4){\r\n            handName = 'With highest card of ' + hands[0]+ ', ' + hands[1] + ' and ' + hands[2]\r\n        }\r\n        return (\r\n            <p style={{color: \"green\"}}>{handName}</p>\r\n        )\r\n    }\r\n\r\n    handleResult() {\r\n        const cardList = Store.getState().cardTable.cards\r\n        const names = Store.getState().main\r\n        const nameList = []\r\n        nameList.push(names.player1)\r\n        nameList.push(names.player2)\r\n        nameList.push(names.player3)\r\n        nameList.push(names.player4)\r\n        console.log(nameList)\r\n        const card = {\r\n            cards : cardList,\r\n            names : nameList\r\n        }\r\n        this.setState({\r\n            showCheck: false,\r\n            showResult: false,\r\n            showNewHand: true\r\n        })\r\n        this.props.getResult(card)\r\n    }\r\n\r\n    distributeCards() {\r\n        this.props.getCards(); \r\n    }\r\n\r\n    handleCheck() {\r\n        const {cards} = this.props.cardTable\r\n        var imageList = []\r\n        for(var i = 0; i < cards.length; i++){\r\n            imageList.push(require(\"../cards-png/\" + cards[i] + \".png\"))\r\n        }\r\n        this.props.addImages(imageList)\r\n\r\n        this.setState({\r\n            check: true,\r\n            showResult: true,\r\n            showCheck: false,\r\n            showNewHand: false,\r\n        })\r\n    }\r\n\r\n    createFrontCardDiv(images, index) {\r\n        var divFrontCard = []\r\n        for(var i = index; i < index+3; i++){\r\n            divFrontCard.push(\r\n                <Card style={{ width: '6rem', height: '9rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                    <Card.Img src={images[i]} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                </Card>\r\n            )\r\n        }\r\n        return divFrontCard\r\n    }\r\n\r\n    createBackCardDiv(){\r\n        var divBackCard = []\r\n        for(var i = 0; i < 3; i++){\r\n            divBackCard.push(\r\n                <Card style={{ width: '6rem', height: '9rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-5rem\" }}>\r\n                    <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                </Card>\r\n            )\r\n        }\r\n        return divBackCard\r\n    }\r\n\r\n    handleReset() {\r\n        this.distributeCards()\r\n        this.setState({\r\n            check: false,\r\n            showResult: false,\r\n            showCheck: true,\r\n            showNewHand: false\r\n        });\r\n        this.props.clearData()\r\n    }\r\n\r\n    render() {\r\n        const {images, winners} = this.props.cardTable\r\n        const { player1, player2, player3, player4} = this.props.main\r\n        return (\r\n            <div style={{ display: \"flex\"}}>\r\n                <Container style={{ alignItems: \"center\", width: \"250%\", backgroundImage:`url(${wallImage})`, backgroundRepeat:\"no-repeat\", backgroundSize: \"cover\", height: \"100%\"}} fluid>\r\n                    <div className=\"card-board\" style={{ color: \"white\"}}>\r\n                        <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                            <Col>\r\n                                {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player1 !== '' ? (player1): 'Seat 1' }</p> )}\r\n                                {this.state.check &&( <p>{player1}</p> )}\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row style={{ marginLeft: \"100px\", textAlign: \"center\"}}>\r\n                            <Col></Col>\r\n                            <Col style={{ textAlign: \"center\" }}>\r\n                                {!this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createBackCardDiv()}\r\n                                    </div>\r\n                                )}\r\n                                {this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createFrontCardDiv(images,0)}\r\n                                    </div>\r\n                                )}\r\n\r\n                            </Col>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                            <Col>\r\n                            {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player2 !== '' ? (player2): 'Seat 2' }</p> )}\r\n                            {this.state.check &&( <p>{player2}</p> )}\r\n                            </Col>\r\n                            <Col>\r\n                            </Col>\r\n                            <Col>\r\n                            {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player3 !== '' ? (player3): 'Seat 3' }</p> )}\r\n                            {this.state.check &&( <p>{player3}</p> )}\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row style={{ marginLeft: \"100px\" , textAlign: \"center\" }}>\r\n                            <Col style={{ textAlign: \"center\" }}>\r\n                                {!this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createBackCardDiv()}\r\n                                    </div>\r\n                                )}\r\n                                {this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createFrontCardDiv(images,3)}\r\n                                    </div>\r\n                                )}\r\n                            </Col>\r\n                            <Col>\r\n                            </Col>\r\n                            <Col style={{ textAlign: \"center\" }}>\r\n                                {!this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createBackCardDiv()}\r\n                                    </div>\r\n                                )}\r\n                                {this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createFrontCardDiv(images,6)}\r\n                                    </div>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row style={{ marginLeft: \"100px\" , textAlign: \"center\" }}>\r\n                            <Col>\r\n                            </Col>\r\n                            <Col style={{ textAlign: \"center\" }}>\r\n                                {!this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createBackCardDiv()}\r\n                                    </div>\r\n                                )}\r\n                                {this.state.check && (\r\n                                    <div className=\"cards\">\r\n                                        {this.createFrontCardDiv(images,9)}\r\n                                    </div>\r\n                                )}\r\n                            </Col>\r\n                            <Col>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                            <Col>\r\n                            {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{player4 !== '' ? (player4): 'Seat 4' }</p> )}\r\n                            {this.state.check &&( <p>{player4}</p> )}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container >\r\n                <Container style={{ marginTop: \"70px\", textAlign: \"center\", fontFamily: \"Times New Roman, Times, serif\"}}>\r\n                    {winners.length > 0 && (\r\n                        <div>\r\n                            <Row>\r\n                                <Col style={{textAlign: \"center\"}}>\r\n                                    <img src={winImage}></img>\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col style={{textAlign: \"center\"}}>\r\n                                    {this.getWinnerName()}\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col  style={{textAlign: \"center\"}}>\r\n                                    {this.getWinnersHand()}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )}\r\n                    <br/>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <button type=\"button\" className=\"btn\" onClick={() => this.handleCheck()} disabled={!this.state.showCheck}>Check</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{ marginTop: \"5px\"}}>\r\n                            <button type=\"button\" className=\"btn\" onClick={() => this.handleResult()} disabled={!this.state.showResult}>Result</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{ marginTop: \"5px\"}}>\r\n                            <button type=\"button\" className=\"btn\" onClick={() => this.handleReset()} disabled={!this.state.showNewHand}>New Hand</button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        cardTable : state.cardTable,\r\n        main : state.main\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        getCards: () => dispatch(getCards()),\r\n        getResult: (cardList) => dispatch(getResult(cardList)),\r\n        addImages: (imageList) => dispatch(addImages(imageList)),\r\n        clearData: () => dispatch(clearData())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardTable)\r\n"]},"metadata":{},"sourceType":"module"}