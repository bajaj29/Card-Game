{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\cardgame-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_RESULT, GET_CARDS, GET_CARDS_REQUEST, GET_CARDS_SUCCESS, GET_CARDS_FAILURE, GET_RESULT_REQUEST, GET_RESULT_SUCCESS, GET_RESULT_FAILURE } from \"./CardTableAction\";\nconst initialState = {\n  cards: [],\n  winners: [],\n  error: null,\n  loading: false\n};\n\nconst CardTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RESULT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_RESULT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        winners: state.winners.concat(action.payload)\n      });\n\n    case GET_RESULT_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case GET_RESULT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_CARDS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_CARDS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        cards: state.cards.concat(action.payload)\n      });\n\n    case GET_CARDS_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default CardTableReducer;","map":{"version":3,"sources":["C:\\Project\\cardgame-react\\src\\component\\card-table\\CardTableReducer.js"],"names":["GET_RESULT","GET_CARDS","GET_CARDS_REQUEST","GET_CARDS_SUCCESS","GET_CARDS_FAILURE","GET_RESULT_REQUEST","GET_RESULT_SUCCESS","GET_RESULT_FAILURE","initialState","cards","winners","error","loading","CardTableReducer","state","action","type","concat","payload"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,iBAAhC,EAAmDC,iBAAnD,EAAsEC,iBAAtE,EAAyFC,kBAAzF,EAA6GC,kBAA7G,EAAiIC,kBAAjI,QAA2J,mBAA3J;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,OAAO,EAAG,EAFO;AAGjBC,EAAAA,KAAK,EAAG,IAHS;AAIjBC,EAAAA,OAAO,EAAG;AAJO,CAArB;;AAOA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAiC;AAEtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,kBAAL;AAAyB,+BAClBS,KADkB;AAErBF,QAAAA,OAAO,EAAG;AAFW;;AAIzB,SAAKN,kBAAL;AAAyB,+BAClBQ,KADkB;AAErBF,QAAAA,OAAO,EAAG,KAFW;AAGrBF,QAAAA,OAAO,EAAGI,KAAK,CAACJ,OAAN,CAAcO,MAAd,CAAqBF,MAAM,CAACG,OAA5B;AAHW;;AAKzB,SAAKX,kBAAL;AAAyB,+BAClBO,KADkB;AAErBF,QAAAA,OAAO,EAAG,KAFW;AAGrBD,QAAAA,KAAK,EAAGI,MAAM,CAACG;AAHM;;AAKzB,SAAKb,kBAAL;AAAyB,+BAClBS,KADkB;AAErBF,QAAAA,OAAO,EAAG;AAFW;;AAIzB,SAAKV,iBAAL;AAAwB,+BACjBY,KADiB;AAEpBF,QAAAA,OAAO,EAAG;AAFU;;AAIxB,SAAKT,iBAAL;AAAwB,+BACjBW,KADiB;AAEpBF,QAAAA,OAAO,EAAG,KAFU;AAGpBH,QAAAA,KAAK,EAAGK,KAAK,CAACL,KAAN,CAAYQ,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;AAHY;;AAKxB,SAAKd,iBAAL;AAAwB,+BACjBU,KADiB;AAEpBF,QAAAA,OAAO,EAAG,KAFU;AAGpBD,QAAAA,KAAK,EAAGI,MAAM,CAACG;AAHK;;AAKxB;AAAS,aAAOJ,KAAP;AAjCb;AAmCH,CArCD;;AAuCA,eAAeD,gBAAf","sourcesContent":["import { GET_RESULT, GET_CARDS, GET_CARDS_REQUEST, GET_CARDS_SUCCESS, GET_CARDS_FAILURE, GET_RESULT_REQUEST, GET_RESULT_SUCCESS, GET_RESULT_FAILURE } from \"./CardTableAction\"\r\n\r\nconst initialState = {\r\n    cards : [],\r\n    winners : [],\r\n    error : null,\r\n    loading : false \r\n}\r\n\r\nconst CardTableReducer = (state = initialState, action) =>{\r\n\r\n    switch(action.type){\r\n        case GET_RESULT_REQUEST: return{\r\n            ...state,\r\n            loading : true\r\n        }\r\n        case GET_RESULT_SUCCESS: return{\r\n            ...state,\r\n            loading : false,\r\n            winners : state.winners.concat(action.payload)\r\n        }\r\n        case GET_RESULT_FAILURE: return{\r\n            ...state,\r\n            loading : false,\r\n            error : action.payload\r\n        }\r\n        case GET_RESULT_REQUEST: return{\r\n            ...state,\r\n            loading : true\r\n        }\r\n        case GET_CARDS_REQUEST: return{\r\n            ...state,\r\n            loading : true\r\n        }\r\n        case GET_CARDS_SUCCESS: return{\r\n            ...state,\r\n            loading : false,\r\n            cards : state.cards.concat(action.payload) \r\n        }\r\n        case GET_CARDS_FAILURE: return{\r\n            ...state,\r\n            loading : false,\r\n            error : action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default CardTableReducer"]},"metadata":{},"sourceType":"module"}