{"ast":null,"code":"import _objectSpread from \"C:\\\\Project\\\\cardgame-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Project\\\\cardgame-react\\\\src\\\\component\\\\card-table\\\\CardTable.js\";\nimport React, { Component } from 'react';\nimport './CardTable.css';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\nimport { getCards, getResult } from './CardTableAction';\nimport { connect } from 'react-redux';\n\nvar CardBack = require('../card-table/cards-png/red_back.png');\n\nclass CardTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n      images: [{\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }, {\n        image: ''\n      }],\n      cardA1: '',\n      cardA2: '',\n      cardA3: '',\n      cardB1: '',\n      cardB2: '',\n      cardB3: '',\n      cardC1: '',\n      cardC2: '',\n      cardC3: '',\n      cardD1: '',\n      cardD2: '',\n      cardD3: '',\n      handRank: [],\n      winner: [],\n      winnerHand: [],\n      player1: 'Clarke',\n      player2: 'Murphy',\n      player3: 'Bellamy',\n      player4: 'Raven',\n      showCheck: true,\n      showResult: false,\n      showNewHand: false\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n  }\n\n  componentDidMount() {\n    this.distributeCards();\n  }\n\n  componentDidUpdate() {\n    this.setState(prevState => ({\n      images: prevState.images.map((obj, index) => {\n        console.log(this.props.cardTable.cards[index]);\n\n        var imagePath = require('../card-table/cards-png/' + this.props.cardTable.cards[index] + '.png');\n\n        Object.assign(obj, _objectSpread({}, obj, {\n          image: imagePath\n        }));\n      })\n    }));\n  }\n\n  handleResult() {\n    this.setState({\n      showCheck: false,\n      showResult: false,\n      showNewHand: true\n    });\n    var orderA = this.arrangeOrder(\"A\");\n    var orderB = this.arrangeOrder(\"B\");\n    var orderC = this.arrangeOrder(\"C\");\n    var orderD = this.arrangeOrder(\"D\");\n    var handRanking = [];\n    handRanking.push(this.giveHandRanking(orderA));\n    handRanking.push(this.giveHandRanking(orderB));\n    handRanking.push(this.giveHandRanking(orderC));\n    handRanking.push(this.giveHandRanking(orderD));\n    console.log(handRanking);\n    var sortedRank = [...handRanking];\n    sortedRank.sort((a, b) => a - b);\n    var winArr = [];\n    var winHand = [];\n\n    if (sortedRank[0] === 1) {\n      console.log(1);\n      console.log(sortedRank);\n      var max = 2;\n\n      if (parseInt(orderA[0]) >= max && handRanking[0] === 1) {\n        console.log('handRanking' + 0);\n        max = parseInt(orderA[0]);\n        winArr = [];\n        winArr = winArr.concat(\"A\");\n        winHand = [];\n        winHand = winHand.concat(orderA);\n      }\n\n      if (parseInt(orderB[0]) >= max && handRanking[1] === 1) {\n        console.log('handRanking' + 1);\n        max = parseInt(orderB[0]);\n        winArr = [];\n        winArr = winArr.concat(\"B\");\n        winHand = [];\n        winHand = winHand.concat(orderB);\n      }\n\n      if (parseInt(orderC[0]) >= max && handRanking[2] === 1) {\n        console.log('handRanking' + 2);\n        max = parseInt(orderC[0]);\n        winArr = [];\n        winArr = winArr.concat(\"C\");\n        winHand = [];\n        winHand = winHand.concat(orderC);\n      }\n\n      if (parseInt(orderD[0]) >= max && handRanking[3] === 1) {\n        console.log('handRanking' + 3);\n        max = parseInt(orderD[0]);\n        winArr = [];\n        winArr = winArr.concat(\"D\");\n        winHand = [];\n        winHand = winHand.concat(orderD);\n      }\n    } else if (sortedRank[0] === 2) {\n      console.log(2);\n      console.log(sortedRank);\n      var max = 4;\n\n      if (parseInt(orderA[0]) >= max && handRanking[0] === 2) {\n        console.log('handRanking' + 0);\n        max = parseInt(orderA[0]);\n        winArr = [];\n        winArr = winArr.concat(\"A\");\n        winHand = [];\n        winHand = winHand.concat(orderA);\n      }\n\n      if (handRanking[1] === 2) {\n        console.log('handRanking' + 1);\n\n        if (parseInt(orderB[0]) > max) {\n          max = parseInt(orderB[0]);\n          winArr = [];\n          winArr = winArr.concat(\"B\");\n          winHand = [];\n          winHand = winHand.concat(orderB);\n        } else if (parseInt(orderB[0]) === max) {\n          winArr = winArr.concat(\"B\");\n          winHand = winHand.concat(orderB);\n        }\n      }\n\n      if (handRanking[2] === 2) {\n        console.log('handRanking' + 2);\n\n        if (parseInt(orderC[0]) > max) {\n          max = parseInt(orderC[0]);\n          winArr = [];\n          winArr = winArr.concat(\"C\");\n          winHand = [];\n          winHand = winHand.concat(orderC);\n        } else if (parseInt(orderC[0]) === max) {\n          winArr = winArr.concat(\"C\");\n          winHand = winHand.concat(orderC);\n        }\n      }\n\n      if (handRanking[3] === 2) {\n        console.log('handRanking' + 3);\n\n        if (parseInt(orderD[0]) >= max) {\n          max = parseInt(orderD[0]);\n          winArr = [];\n          winArr = winArr.concat(\"D\");\n          winHand = [];\n          winHand = winHand.concat(orderD);\n        } else if (parseInt(orderD[0]) === max) {\n          winArr = winArr.concat(\"D\");\n          winHand = winHand.concat(orderD);\n        }\n      }\n    } else if (sortedRank[0] === 3) {\n      console.log(3);\n      var max = 2;\n      console.log(sortedRank); //last index of the order\n\n      var maxL = parseInt(orderA[2]);\n\n      if (handRanking[0] === 3) {\n        if (parseInt(orderA[0]) >= max) {\n          console.log('handRanking' + 0);\n          max = parseInt(orderA[0]);\n          winArr = [];\n          winArr = winArr.concat(\"A\");\n          winHand = [];\n          winHand = winHand.concat(orderA);\n        }\n      }\n\n      if (handRanking[1] === 3) {\n        console.log('handRanking' + 1);\n\n        if (parseInt(orderB[0]) > max) {\n          max = parseInt(orderB[0]);\n          maxL = parseInt(orderB[2]);\n          winArr = [];\n          winArr = winArr.concat(\"B\");\n          winHand = [];\n          winHand = winHand.concat(orderB);\n        } else if (parseInt(orderB[0]) === max && parseInt(orderB[2]) === maxL) {\n          winArr = winArr.concat(\"B\");\n          winHand = winHand.concat(orderB);\n        } else if (parseInt(orderB[0]) === max && parseInt(orderB[2]) > maxL) {\n          maxL = parseInt(orderB[2]);\n          winArr = [];\n          winArr = winArr.concat(\"B\");\n          winHand = [];\n          winHand = winHand.concat(orderB);\n        }\n      }\n\n      if (handRanking[2] === 3) {\n        console.log('handRanking' + 2);\n\n        if (parseInt(orderC[0]) > max) {\n          max = parseInt(orderC[0]);\n          maxL = parseInt(orderC[2]);\n          winArr = [];\n          winArr = winArr.concat(\"C\");\n          winHand = [];\n          winHand = winHand.concat(orderC);\n        } else if (parseInt(orderC[0]) === max && parseInt(orderC[2]) === maxL) {\n          winArr = winArr.concat(\"C\");\n          winHand = winHand.concat(orderC);\n        } else if (parseInt(orderC[0]) === max && parseInt(orderC[2]) > maxL) {\n          maxL = parseInt(orderC[2]);\n          winArr = [];\n          winArr = winArr.concat(\"C\");\n          winHand = [];\n          winHand = winHand.concat(orderC);\n        }\n      }\n\n      if (handRanking[3] === 3) {\n        console.log('handRanking' + 3);\n\n        if (parseInt(orderD[0]) > max) {\n          max = parseInt(orderD[0]);\n          maxL = parseInt(orderD[2]);\n          winArr = [];\n          winArr = winArr.concat(\"D\");\n          winHand = [];\n          winHand = winHand.concat(orderD);\n        } else if (parseInt(orderD[0]) === max && parseInt(orderD[2]) === maxL) {\n          winArr = winArr.concat(\"D\");\n          winHand = winHand.concat(orderA);\n        } else if (parseInt(orderD[0]) === max && parseInt(orderD[2]) > maxL) {\n          maxL = parseInt(orderD[2]);\n          winArr = [];\n          winArr = winArr.concat(\"D\");\n          winHand = [];\n          winHand = winHand.concat(orderD);\n        }\n      }\n    } else if (sortedRank[0] === 4) {\n      console.log(4);\n      console.log(sortedRank);\n      var max = 2;\n      var maxM = parseInt(orderA[1]);\n      var maxL = parseInt(orderA[2]);\n\n      if (parseInt(orderA[0]) >= max && handRanking[0] === 4) {\n        console.log('handRanking' + 0);\n        max = parseInt(orderA[0]);\n        winArr = [];\n        winArr = winArr.concat(\"A\");\n        winHand = [];\n        winHand = winHand.concat(orderA);\n      }\n\n      if (handRanking[1] === 4) {\n        console.log('handRanking' + 1);\n\n        if (parseInt(orderB[0]) > max) {\n          max = parseInt(orderB[0]);\n          maxM = parseInt(orderB[1]);\n          maxL = parseInt(orderB[2]);\n          winArr = [];\n          winArr = winArr.concat(\"B\");\n          winHand = [];\n          winHand = winHand.concat(orderB);\n        } else if (parseInt(orderB[0]) === max && parseInt(orderB[1]) > maxM) {\n          max = parseInt(orderB[0]);\n          maxM = parseInt(orderB[1]);\n          maxL = parseInt(orderB[2]);\n          winArr = [];\n          winArr = winArr.concat(\"B\");\n          winHand = [];\n          winHand = winHand.concat(orderB);\n        } else if (parseInt(orderB[0]) === max && parseInt(orderB[1]) === maxM && parseInt(orderB[2]) > maxL) {\n          max = parseInt(orderB[0]);\n          maxM = parseInt(orderB[1]);\n          maxL = parseInt(orderB[2]);\n          winArr = [];\n          winArr = winArr.concat(\"B\");\n          winHand = [];\n          winHand = winHand.concat(orderB);\n        } else if (parseInt(orderB[0]) === max && parseInt(parseInt(orderB[1])) === maxM && parseInt(orderB[2]) === maxL) {\n          winArr = winArr.concat(\"B\");\n          winHand = winHand.concat(orderB);\n        }\n      }\n\n      if (handRanking[2] === 4) {\n        console.log('handRanking' + 2);\n\n        if (parseInt(orderC[0]) > max) {\n          max = parseInt(orderC[0]);\n          maxM = parseInt(orderC[1]);\n          maxL = parseInt(orderC[2]);\n          winArr = [];\n          winArr = winArr.concat(\"C\");\n          winHand = [];\n          winHand = winHand.concat(orderC);\n        } else if (parseInt(orderC[0]) === max && parseInt(orderC[1]) > maxM) {\n          max = parseInt(orderC[0]);\n          maxM = parseInt(orderC[1]);\n          maxL = parseInt(orderC[2]);\n          winArr = [];\n          winArr = winArr.concat(\"C\");\n          winHand = [];\n          winHand = winHand.concat(orderC);\n        } else if (parseInt(orderC[0]) === max && parseInt(orderC[1]) === maxM && parseInt(orderC[2]) > maxL) {\n          max = parseInt(orderC[0]);\n          maxM = parseInt(orderC[1]);\n          maxL = parseInt(orderC[2]);\n          winArr = [];\n          winArr = winArr.concat(\"C\");\n          winHand = [];\n          winHand = winHand.concat(orderC);\n        } else if (parseInt(orderC[0]) === max && parseInt(orderC[1]) === maxM && parseInt(orderC[2]) === maxL) {\n          winArr = winArr.concat(\"C\");\n          winHand = winHand.concat(orderC);\n        }\n      }\n\n      if (handRanking[3] === 4) {\n        console.log('handRanking' + 3);\n\n        if (parseInt(orderD[0]) > max) {\n          max = parseInt(orderD[0]);\n          maxM = parseInt(orderD[1]);\n          maxL = parseInt(orderD[2]);\n          winArr = [];\n          winArr = winArr.concat(\"D\");\n          winHand = [];\n          winHand = winHand.concat(orderD);\n        } else if (parseInt(orderD[0]) === max && parseInt(orderD[1]) > maxM) {\n          max = parseInt(orderD[0]);\n          maxM = parseInt(orderD[1]);\n          maxL = parseInt(orderD[2]);\n          winArr = [];\n          winArr = winArr.concat(\"D\");\n          winHand = [];\n          winHand = winHand.concat(orderD);\n        } else if (parseInt(orderD[0]) === max && parseInt(orderD[1]) === maxM && parseInt(orderD[2]) > maxL) {\n          max = parseInt(orderD[0]);\n          maxM = parseInt(orderD[1]);\n          maxL = parseInt(orderD[2]);\n          winArr = [];\n          winArr = winArr.concat(\"D\");\n          winHand = [];\n          winHand = winHand.concat(orderD);\n        } else if (parseInt(orderD[0]) === max && parseInt(orderD[1]) === maxM && parseInt(orderD[2]) === maxL) {\n          winArr = winArr.concat(\"D\");\n          winHand = winHand.concat(orderD);\n        }\n      }\n    }\n\n    this.setState({\n      winner: winArr,\n      winnerHand: winHand\n    }, () => {\n      console.log(this.state.winner);\n      console.log(this.state.winnerHand);\n    });\n  } // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\n\n\n  giveHandRanking(order) {\n    if (order[0] === order[1] && order[0] === order[2]) {\n      return 1;\n    } else if (order[0] - 1 === order[1] && order[1] - 1 === order[2]) {\n      return 2;\n    } else if (order[0] === order[1] || order[0] === order[2] || order[1] === order[2]) {\n      return 3;\n    } else {\n      return 4;\n    }\n  }\n\n  arrangeOrder(char) {\n    var order = [];\n    var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1;\n    var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2;\n    var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3;\n    order.push(parseInt(card1), parseInt(card2), parseInt(card3));\n    order.sort((a, b) => b - a);\n\n    if (order[0] !== order[1] && order[1] === order[2]) {\n      var card = order.splice(0, 1)[0];\n      order.splice(2, 0, card);\n    }\n\n    return order;\n  }\n\n  getCardValue(card) {\n    let cardMap = new Map([['A', 14], ['K', 13], ['Q', 12], ['J', 11], ['10', 10], ['9', 9], ['8', 8], ['7', 7], ['6', 6], ['5', 5], ['4', 4], ['3', 3], ['2', 2], ['1', 1]]);\n    var cardValue = 0;\n\n    if (!card.includes('10')) {\n      cardValue = cardMap.get(card[0]);\n    } else {\n      cardValue = cardMap.get(card.substring(0, 2));\n    }\n\n    return cardValue;\n  } //changing the Ace value based on perference with highest possibility. eg (A,2,3 => Ace: 1 => 1,2,3) (otherwise => Ace: 14)\n\n\n  checkAcePreference() {\n    //seat 1\n    if (this.state.cardA1 === 14 && (this.state.cardA2 === 2 && this.state.cardA3 === 3 || this.state.cardA2 === 3 && this.state.cardA3 === 2)) {\n      this.setState({\n        cardA1: 1\n      });\n    } else if (this.state.cardA2 === 14 && (this.state.cardA1 === 2 && this.state.cardA3 === 3 || this.state.cardA1 === 3 && this.state.cardA3 === 2)) {\n      this.setState({\n        cardA2: 1\n      });\n    } else if (this.state.cardA3 === 14 && (this.state.cardA1 === 2 && this.state.cardA2 === 3 || this.state.cardA1 === 3 && this.state.cardA2 === 2)) {\n      this.setState({\n        cardA3: 1\n      });\n    } //seat 2\n\n\n    if (this.state.cardB1 === 14 && (this.state.cardB2 === 2 && this.state.cardB3 === 3 || this.state.cardB2 === 3 && this.state.cardB3 === 2)) {\n      this.setState({\n        cardB1: 1\n      });\n    } else if (this.state.cardB2 === 14 && (this.state.cardB1 === 2 && this.state.cardB3 === 3 || this.state.cardB1 === 3 && this.state.cardB3 === 2)) {\n      this.setState({\n        cardB2: 1\n      });\n    } else if (this.state.cardB3 === 14 && (this.state.cardB1 === 2 && this.state.cardB2 === 3 || this.state.cardB1 === 3 && this.state.cardB2 === 2)) {\n      this.setState({\n        cardB3: 1\n      });\n    } //seat 3\n\n\n    if (this.state.cardC1 === 14 && (this.state.cardC2 === 2 && this.state.cardC3 === 3 || this.state.cardC2 === 3 && this.state.cardC3 === 2)) {\n      this.setState({\n        cardC1: 1\n      });\n    } else if (this.state.cardC2 === 14 && (this.state.cardC1 === 2 && this.state.cardC3 === 3 || this.state.cardC1 === 3 && this.state.cardC3 === 2)) {\n      this.setState({\n        cardC2: 1\n      });\n    } else if (this.state.cardC3 === 14 && (this.state.cardC1 === 2 && this.state.cardC2 === 3 || this.state.cardC1 === 3 && this.state.cardC2 === 2)) {\n      this.setState({\n        cardC3: 1\n      });\n    } //seat 4\n\n\n    if (this.state.cardD1 === 14 && (this.state.cardD2 === 2 && this.state.cardD3 === 3 || this.state.cardD2 === 3 && this.state.cardD3 === 2)) {\n      this.setState({\n        cardD1: 1\n      });\n    } else if (this.state.cardD2 === 14 && (this.state.cardD1 === 2 && this.state.cardD3 === 3 || this.state.cardD1 === 3 && this.state.cardD3 === 2)) {\n      this.setState({\n        cardD2: 1\n      });\n    } else if (this.state.cardD3 === 14 && (this.state.cardD1 === 2 && this.state.cardD2 === 3 || this.state.cardD1 === 3 && this.state.cardD2 === 2)) {\n      this.setState({\n        cardD3: 1\n      });\n    }\n  }\n\n  distributeCards() {\n    this.props.getCards();\n  }\n\n  handleCheck() {\n    this.setState({\n      check: true,\n      showResult: true,\n      showCheck: false,\n      showNewHand: false\n    });\n  }\n\n  handleReset() {\n    this.distributeCards();\n    this.setState({\n      check: false,\n      showResult: false,\n      showCheck: true,\n      showNewHand: false\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: {\n        alignItems: \"center\",\n        background: \"#777\"\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, this.state.player1, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, this.state.player1, \"'s Seat\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.images[0].imageA1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageA3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, this.state.winner.length === 1 && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, this.state.winner[0] === \"A\" ? this.state.player1 : this.state.winner[0] === \"B\" ? this.state.player2 : this.state.winner[0] === \"C\" ? this.state.player3 : this.state.player4, \" \\xA0 Wins\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, this.state.player2, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, this.state.player2, \"'s Seat\")), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, this.state.player3, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, this.state.player3, \"'s Seat\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageB3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageC3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)',\n        marginLeft: \"-6rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: CardBack,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }))), this.state.check && React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD1,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD2,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '8rem',\n        height: '12rem',\n        border: '2px solid rgb(221, 221, 224)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.state.imageD3,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      sm: 4,\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: () => this.handleCheck(),\n      disabled: !this.state.showCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn1\",\n      onClick: () => this.handleResult(),\n      disabled: !this.state.showResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn1\",\n      onClick: () => this.handleReset(),\n      disabled: !this.state.showNewHand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    }, \"New Hand\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        marginLeft: \"100px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }, !this.state.check && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"-20rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, this.state.player4, \"'s Seat\"), this.state.check && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, this.state.player4, \"'s Seat\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cardTable: state.cardTable\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCards: () => dispatch(getCards()),\n    getResult: cardList => dispatch(getResult(cardList))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardTable);","map":{"version":3,"sources":["C:\\Project\\cardgame-react\\src\\component\\card-table\\CardTable.js"],"names":["React","Component","Container","Card","Row","Col","getCards","getResult","connect","CardBack","require","CardTable","constructor","props","state","check","images","image","cardA1","cardA2","cardA3","cardB1","cardB2","cardB3","cardC1","cardC2","cardC3","cardD1","cardD2","cardD3","handRank","winner","winnerHand","player1","player2","player3","player4","showCheck","showResult","showNewHand","handleCheck","bind","handleReset","handleResult","componentDidMount","distributeCards","componentDidUpdate","setState","prevState","map","obj","index","console","log","cardTable","cards","imagePath","Object","assign","orderA","arrangeOrder","orderB","orderC","orderD","handRanking","push","giveHandRanking","sortedRank","sort","a","b","winArr","winHand","max","parseInt","concat","maxL","maxM","order","char","card1","card2","card3","card","splice","getCardValue","cardMap","Map","cardValue","includes","get","substring","checkAcePreference","render","alignItems","background","marginLeft","textAlign","width","height","border","imageA1","imageA2","imageA3","length","imageB1","imageB2","imageB3","imageC1","imageC2","imageC3","imageD1","imageD2","imageD3","mapStateToProps","mapDispatchToProps","dispatch","cardList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './CardTable.css'\r\nimport { Container, Card, Row, Col } from 'react-bootstrap'\r\nimport { getCards, getResult } from './CardTableAction';\r\nimport { connect } from 'react-redux';\r\nvar CardBack = require('../card-table/cards-png/red_back.png');\r\n\r\n\r\nclass CardTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            images: [\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                },\r\n                {\r\n                    image: ''\r\n                }\r\n            ],\r\n            cardA1: '',\r\n            cardA2: '',\r\n            cardA3: '',\r\n            cardB1: '',\r\n            cardB2: '',\r\n            cardB3: '',\r\n            cardC1: '',\r\n            cardC2: '',\r\n            cardC3: '',\r\n            cardD1: '',\r\n            cardD2: '',\r\n            cardD3: '',\r\n            handRank: [],\r\n            winner: [],\r\n            winnerHand: [],\r\n            player1: 'Clarke',\r\n            player2: 'Murphy',\r\n            player3: 'Bellamy',\r\n            player4: 'Raven',\r\n            showCheck: true,\r\n            showResult: false,\r\n            showNewHand: false\r\n        };\r\n        \r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleResult = this.handleResult.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.distributeCards();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setState(prevState => ({\r\n            images : prevState.images.map ((obj, index)=>{ \r\n            console.log(this.props.cardTable.cards[index])\r\n            var imagePath = require('../card-table/cards-png/' + this.props.cardTable.cards[index] + '.png')\r\n            Object.assign(obj, { ...obj, image: imagePath})\r\n            })\r\n        }))\r\n    }\r\n\r\n    handleResult() {\r\n        this.setState({\r\n            showCheck: false,\r\n            showResult: false,\r\n            showNewHand: true\r\n        })\r\n        var orderA = this.arrangeOrder(\"A\")\r\n        var orderB = this.arrangeOrder(\"B\")\r\n        var orderC = this.arrangeOrder(\"C\")\r\n        var orderD = this.arrangeOrder(\"D\")\r\n        var handRanking = []\r\n        handRanking.push(this.giveHandRanking(orderA))\r\n        handRanking.push(this.giveHandRanking(orderB))\r\n        handRanking.push(this.giveHandRanking(orderC))\r\n        handRanking.push(this.giveHandRanking(orderD))\r\n        console.log(handRanking)\r\n        var sortedRank = [...handRanking]\r\n        sortedRank.sort((a, b) => a - b)\r\n\r\n        var winArr = []\r\n        var winHand = []\r\n        if (sortedRank[0] === 1) {\r\n            console.log(1)\r\n            console.log(sortedRank)\r\n            var max = 2\r\n            if (parseInt(orderA[0]) >= max && handRanking[0] === 1) {\r\n                console.log('handRanking' + 0)\r\n                max = parseInt(orderA[0])\r\n                winArr = []\r\n                winArr = winArr.concat(\"A\")\r\n                winHand = []\r\n                winHand = winHand.concat(orderA)\r\n            }\r\n            if (parseInt(orderB[0]) >= max && handRanking[1] === 1) {\r\n                console.log('handRanking' + 1)\r\n                max = parseInt(orderB[0])\r\n                winArr = []\r\n                winArr = winArr.concat(\"B\")\r\n                winHand = []\r\n                winHand = winHand.concat(orderB)\r\n            }\r\n            if (parseInt(orderC[0]) >= max && handRanking[2] === 1) {\r\n                console.log('handRanking' + 2)\r\n                max = parseInt(orderC[0])\r\n                winArr = []\r\n                winArr = winArr.concat(\"C\")\r\n                winHand = []\r\n                winHand = winHand.concat(orderC)\r\n            }\r\n            if (parseInt(orderD[0]) >= max && handRanking[3] === 1) {\r\n                console.log('handRanking' + 3)\r\n                max = parseInt(orderD[0])\r\n                winArr = []\r\n                winArr = winArr.concat(\"D\")\r\n                winHand = []\r\n                winHand = winHand.concat(orderD)\r\n            }\r\n        }\r\n        else if (sortedRank[0] === 2) {\r\n            console.log(2)\r\n            console.log(sortedRank)\r\n\r\n            var max = 4\r\n            if (parseInt(orderA[0]) >= max && handRanking[0] === 2) {\r\n                console.log('handRanking' + 0)\r\n                max = parseInt(orderA[0])\r\n                winArr = []\r\n                winArr = winArr.concat(\"A\")\r\n                winHand = []\r\n                winHand = winHand.concat(orderA)\r\n            }\r\n\r\n            if (handRanking[1] === 2) {\r\n                console.log('handRanking' + 1)\r\n                if (parseInt(orderB[0]) > max) {\r\n                    max = parseInt(orderB[0])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = []\r\n                    winHand = winHand.concat(orderB)\r\n                }\r\n                else if (parseInt(orderB[0]) === max) {\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = winHand.concat(orderB)\r\n                }\r\n            }\r\n\r\n            if (handRanking[2] === 2) {\r\n                console.log('handRanking' + 2)\r\n                if (parseInt(orderC[0]) > max) {\r\n                    max = parseInt(orderC[0])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = []\r\n                    winHand = winHand.concat(orderC)\r\n                }\r\n                else if (parseInt(orderC[0]) === max) {\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = winHand.concat(orderC)\r\n                }\r\n            }\r\n\r\n            if (handRanking[3] === 2) {\r\n                console.log('handRanking' + 3)\r\n                if (parseInt(orderD[0]) >= max) {\r\n                    max = parseInt(orderD[0])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderD)\r\n                }\r\n                else if (parseInt(orderD[0]) === max) {\r\n                    winArr = winArr.concat(\"D\")\r\n                winHand = winHand.concat(orderD)\r\n                }\r\n            }\r\n        }\r\n        else if (sortedRank[0] === 3) {\r\n            console.log(3)\r\n            var max = 2\r\n            console.log(sortedRank)\r\n            //last index of the order\r\n            var maxL = parseInt(orderA[2])\r\n            if (handRanking[0] === 3) {\r\n                if (parseInt(orderA[0]) >= max) {\r\n                    console.log('handRanking' + 0)\r\n                    max = parseInt(orderA[0])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"A\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderA)\r\n                }\r\n            }\r\n\r\n            if (handRanking[1] === 3) {\r\n                console.log('handRanking' + 1)\r\n                if (parseInt(orderB[0]) > max) {\r\n                    max = parseInt(orderB[0])\r\n                    maxL = parseInt(orderB[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n                else if (parseInt(orderB[0]) === max && parseInt(orderB[2]) === maxL) {\r\n                    winArr = winArr.concat(\"B\")\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n                else if (parseInt(orderB[0]) === max && parseInt(orderB[2]) > maxL) {\r\n                    maxL = parseInt(orderB[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n            }\r\n\r\n            if (handRanking[2] === 3) {\r\n                console.log('handRanking' + 2)\r\n                if (parseInt(orderC[0]) > max) {\r\n                    max = parseInt(orderC[0])\r\n                    maxL = parseInt(orderC[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n                else if (parseInt(orderC[0]) === max && parseInt(orderC[2]) === maxL) {\r\n                    winArr = winArr.concat(\"C\")\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n                else if (parseInt(orderC[0]) === max && parseInt(orderC[2]) > maxL) {\r\n                    maxL = parseInt(orderC[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n            }\r\n\r\n            if (handRanking[3] === 3) {\r\n                console.log('handRanking' + 3)\r\n                if (parseInt(orderD[0]) > max) {\r\n                    max = parseInt(orderD[0])\r\n                    maxL = parseInt(orderD[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderD)\r\n                }\r\n                else if (parseInt(orderD[0]) === max && parseInt(orderD[2]) === maxL) {\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = winHand.concat(orderA)\r\n                }\r\n                else if (parseInt(orderD[0]) === max && parseInt(orderD[2]) > maxL) {\r\n                    maxL = parseInt(orderD[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderD)\r\n                }\r\n            }\r\n        }\r\n        else if (sortedRank[0] === 4) {\r\n            console.log(4)\r\n            console.log(sortedRank)\r\n\r\n            var max = 2\r\n            var maxM = parseInt(orderA[1])\r\n            var maxL = parseInt(orderA[2])\r\n            if (parseInt(orderA[0]) >= max && handRanking[0] === 4) {\r\n                console.log('handRanking' + 0)\r\n                max = parseInt(orderA[0])\r\n                winArr = []\r\n                winArr = winArr.concat(\"A\")\r\n                winHand = []\r\n                winHand = winHand.concat(orderA)\r\n            }\r\n\r\n            if (handRanking[1] === 4) {\r\n                console.log('handRanking' + 1)\r\n                if (parseInt(orderB[0]) > max) {\r\n                    max = parseInt(orderB[0])\r\n                    maxM = parseInt(orderB[1])\r\n                    maxL = parseInt(orderB[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n                else if (parseInt(orderB[0]) === max && parseInt(orderB[1]) > maxM) {\r\n                    max = parseInt(orderB[0])\r\n                    maxM = parseInt(orderB[1])\r\n                    maxL = parseInt(orderB[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n                else if (parseInt(orderB[0]) === max && parseInt(orderB[1]) === maxM && parseInt(orderB[2]) > maxL) {\r\n                    max = parseInt(orderB[0])\r\n                    maxM = parseInt(orderB[1])\r\n                    maxL = parseInt(orderB[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"B\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n                else if (parseInt(orderB[0]) === max && parseInt(parseInt(orderB[1])) === maxM && parseInt(orderB[2]) === maxL) {\r\n                    winArr = winArr.concat(\"B\")\r\n                winHand = winHand.concat(orderB)\r\n                }\r\n            }\r\n\r\n            if (handRanking[2] === 4) {\r\n                console.log('handRanking' + 2)\r\n                if (parseInt(orderC[0]) > max) {\r\n                    max = parseInt(orderC[0])\r\n                    maxM = parseInt(orderC[1])\r\n                    maxL = parseInt(orderC[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n                else if (parseInt(orderC[0]) === max && parseInt(orderC[1]) > maxM) {\r\n                    max = parseInt(orderC[0])\r\n                    maxM = parseInt(orderC[1])\r\n                    maxL = parseInt(orderC[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n                else if (parseInt(orderC[0]) === max && parseInt(orderC[1]) === maxM && parseInt(orderC[2]) > maxL) {\r\n                    max = parseInt(orderC[0])\r\n                    maxM = parseInt(orderC[1])\r\n                    maxL = parseInt(orderC[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"C\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n                else if (parseInt(orderC[0]) === max && parseInt(orderC[1]) === maxM && parseInt(orderC[2]) === maxL) {\r\n                    winArr = winArr.concat(\"C\")\r\n                winHand = winHand.concat(orderC)\r\n                }\r\n            }\r\n\r\n            if (handRanking[3] === 4) {\r\n                console.log('handRanking' + 3)\r\n                if (parseInt(orderD[0]) > max) {\r\n                    max = parseInt(orderD[0])\r\n                    maxM = parseInt(orderD[1])\r\n                    maxL = parseInt(orderD[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = []\r\n                winHand = winHand.concat(orderD)\r\n                }\r\n                else if (parseInt(orderD[0]) === max && parseInt(orderD[1]) > maxM) {\r\n                    max = parseInt(orderD[0])\r\n                    maxM = parseInt(orderD[1])\r\n                    maxL = parseInt(orderD[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = []\r\n                    winHand = winHand.concat(orderD)\r\n                }\r\n                else if (parseInt(orderD[0]) === max && parseInt(orderD[1]) === maxM && parseInt(orderD[2]) > maxL) {\r\n                    max = parseInt(orderD[0])\r\n                    maxM = parseInt(orderD[1])\r\n                    maxL = parseInt(orderD[2])\r\n                    winArr = []\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = []\r\n                    winHand = winHand.concat(orderD)\r\n                }\r\n                else if (parseInt(orderD[0]) === max && parseInt(orderD[1]) === maxM && parseInt(orderD[2]) === maxL) {\r\n                    winArr = winArr.concat(\"D\")\r\n                    winHand = winHand.concat(orderD)\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            winner: winArr, winnerHand: winHand }, () => {\r\n                console.log(this.state.winner);\r\n                console.log(this.state.winnerHand);\r\n        });\r\n    }\r\n\r\n    // giving ranking for all hands( all-same: 1, sequence: 2, pair: 3, highest-card: 4)\r\n    giveHandRanking(order) {\r\n        if ((order[0] === order[1]) && (order[0] === order[2])) {\r\n            return 1\r\n        }\r\n        else if (order[0] - 1 === order[1] && order[1] - 1 === order[2]) {\r\n            return 2\r\n        }\r\n        else if ((order[0] === order[1]) || (order[0] === order[2]) || (order[1] === order[2])) {\r\n            return 3\r\n        }\r\n        else {\r\n            return 4\r\n        }\r\n    }\r\n\r\n    arrangeOrder(char) {\r\n        var order = []\r\n        var card1 = char === 'A' ? this.state.cardA1 : char === 'B' ? this.state.cardB1 : char === 'C' ? this.state.cardC1 : this.state.cardD1\r\n        var card2 = char === 'A' ? this.state.cardA2 : char === 'B' ? this.state.cardB2 : char === 'C' ? this.state.cardC2 : this.state.cardD2\r\n        var card3 = char === 'A' ? this.state.cardA3 : char === 'B' ? this.state.cardB3 : char === 'C' ? this.state.cardC3 : this.state.cardD3\r\n        order.push(parseInt(card1), parseInt(card2), parseInt(card3))\r\n        order.sort((a, b) => b - a)\r\n        if ((order[0] !== order[1]) && (order[1] === order[2])) {\r\n            var card = order.splice(0, 1)[0]\r\n            order.splice(2, 0, card)\r\n        }\r\n        return order;\r\n    }\r\n\r\n    getCardValue(card) {\r\n        let cardMap = new Map([['A', 14], ['K', 13], ['Q', 12], ['J', 11], ['10', 10], ['9', 9], ['8', 8], ['7', 7], ['6', 6], ['5', 5], ['4', 4], ['3', 3], ['2', 2], ['1', 1]]);\r\n        var cardValue = 0;\r\n        if (!card.includes('10')) {\r\n            cardValue = cardMap.get(card[0])\r\n        }\r\n        else {\r\n            cardValue = cardMap.get(card.substring(0, 2))\r\n        }\r\n        return cardValue;\r\n    }\r\n\r\n    //changing the Ace value based on perference with highest possibility. eg (A,2,3 => Ace: 1 => 1,2,3) (otherwise => Ace: 14)\r\n    checkAcePreference() {\r\n\r\n        //seat 1\r\n        if (this.state.cardA1 === 14 && ((this.state.cardA2 === 2 && this.state.cardA3 === 3) || (this.state.cardA2 === 3 && this.state.cardA3 === 2))) {\r\n            this.setState({\r\n                cardA1: 1\r\n            })\r\n        }\r\n        else if (this.state.cardA2 === 14 && ((this.state.cardA1 === 2 && this.state.cardA3 === 3) || (this.state.cardA1 === 3 && this.state.cardA3 === 2))) {\r\n            this.setState({\r\n                cardA2: 1\r\n            })\r\n        }\r\n        else if (this.state.cardA3 === 14 && ((this.state.cardA1 === 2 && this.state.cardA2 === 3) || (this.state.cardA1 === 3 && this.state.cardA2 === 2))) {\r\n            this.setState({\r\n                cardA3: 1\r\n            })\r\n        }\r\n\r\n        //seat 2\r\n        if (this.state.cardB1 === 14 && ((this.state.cardB2 === 2 && this.state.cardB3 === 3) || (this.state.cardB2 === 3 && this.state.cardB3 === 2))) {\r\n            this.setState({\r\n                cardB1: 1\r\n            })\r\n        }\r\n        else if (this.state.cardB2 === 14 && ((this.state.cardB1 === 2 && this.state.cardB3 === 3) || (this.state.cardB1 === 3 && this.state.cardB3 === 2))) {\r\n            this.setState({\r\n                cardB2: 1\r\n            })\r\n        }\r\n        else if (this.state.cardB3 === 14 && ((this.state.cardB1 === 2 && this.state.cardB2 === 3) || (this.state.cardB1 === 3 && this.state.cardB2 === 2))) {\r\n            this.setState({\r\n                cardB3: 1\r\n            })\r\n        }\r\n\r\n        //seat 3\r\n        if (this.state.cardC1 === 14 && ((this.state.cardC2 === 2 && this.state.cardC3 === 3) || (this.state.cardC2 === 3 && this.state.cardC3 === 2))) {\r\n            this.setState({\r\n                cardC1: 1\r\n            })\r\n        }\r\n        else if (this.state.cardC2 === 14 && ((this.state.cardC1 === 2 && this.state.cardC3 === 3) || (this.state.cardC1 === 3 && this.state.cardC3 === 2))) {\r\n            this.setState({\r\n                cardC2: 1\r\n            })\r\n        }\r\n        else if (this.state.cardC3 === 14 && ((this.state.cardC1 === 2 && this.state.cardC2 === 3) || (this.state.cardC1 === 3 && this.state.cardC2 === 2))) {\r\n            this.setState({\r\n                cardC3: 1\r\n            })\r\n        }\r\n\r\n        //seat 4\r\n        if (this.state.cardD1 === 14 && ((this.state.cardD2 === 2 && this.state.cardD3 === 3) || (this.state.cardD2 === 3 && this.state.cardD3 === 2))) {\r\n            this.setState({\r\n                cardD1: 1\r\n            })\r\n        }\r\n        else if (this.state.cardD2 === 14 && ((this.state.cardD1 === 2 && this.state.cardD3 === 3) || (this.state.cardD1 === 3 && this.state.cardD3 === 2))) {\r\n            this.setState({\r\n                cardD2: 1\r\n            })\r\n        }\r\n        else if (this.state.cardD3 === 14 && ((this.state.cardD1 === 2 && this.state.cardD2 === 3) || (this.state.cardD1 === 3 && this.state.cardD2 === 2))) {\r\n            this.setState({\r\n                cardD3: 1\r\n            })\r\n        }\r\n    }\r\n\r\n    distributeCards() {\r\n        this.props.getCards(); \r\n    }\r\n\r\n    handleCheck() {\r\n        this.setState({\r\n            check: true,\r\n            showResult: true,\r\n            showCheck: false,\r\n            showNewHand: false\r\n        });\r\n    }\r\n\r\n    handleReset() {\r\n        this.distributeCards()\r\n        this.setState({\r\n            check: false,\r\n            showResult: false,\r\n            showCheck: true,\r\n            showNewHand: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{ alignItems: \"center\", background: \"#777\" }} fluid>\r\n                <div className=\"card-board\">\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                        <Col sm={12}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{this.state.player1}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{this.state.player1}'s Seat</p> )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\"}}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.images[0].imageA1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageA3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            {this.state.winner.length === 1 && (\r\n                                <h3>{this.state.winner[0] === \"A\" ? this.state.player1 : this.state.winner[0] === \"B\" ? this.state.player2 : this.state.winner[0] === \"C\" ? this.state.player3 : this.state.player4 } &nbsp; Wins</h3>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                        <Col sm={4}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{this.state.player2}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{this.state.player2}'s Seat</p> )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{this.state.player3}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{this.state.player3}'s Seat</p> )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" , textAlign: \"center\" }}>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageB3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageC3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row style={{ marginLeft: \"100px\" , textAlign: \"center\" }}>\r\n                        <Col sm={4}>\r\n                        </Col>\r\n                        <Col sm={4} style={{ textAlign: \"center\" }}>\r\n                            {!this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)', marginLeft: \"-6rem\" }}>\r\n                                        <Card.Img src={CardBack} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                            {this.state.check && (\r\n                                <div className=\"cards\">\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD1} style={{ width: '100%', height: '100%' }} ></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD2} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                    <Card style={{ width: '8rem', height: '12rem', border: '2px solid rgb(221, 221, 224)' }}>\r\n                                        <Card.Img src={this.state.imageD3} style={{ width: '100%', height: '100%' }}></Card.Img>\r\n                                    </Card>\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                        <Col sm={4} style={{textAlign: \"right\"}}>\r\n                            <button type=\"button\" className=\"btn\" onClick={() => this.handleCheck()} disabled={!this.state.showCheck}>Check</button>\r\n                            <br />\r\n                            <button type=\"button\" className=\"btn1\" onClick={() => this.handleResult()} disabled={!this.state.showResult}>Result</button>\r\n                            <br />\r\n                            <button type=\"button\" className=\"btn1\" onClick={() => this.handleReset()} disabled={!this.state.showNewHand}>New Hand</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row style={{ marginLeft: \"100px\", textAlign: \"center\" }}>\r\n                        <Col sm={12}>\r\n                        {!this.state.check &&( <p style={{marginLeft: \"-20rem\"}}>{this.state.player4}'s Seat</p> )}\r\n                        {this.state.check &&( <p>{this.state.player4}'s Seat</p> )}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        cardTable : state.cardTable\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        getCards: () => dispatch(getCards()),\r\n        getResult: (cardList) => dispatch(getResult(cardList))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardTable)\r\n"]},"metadata":{},"sourceType":"module"}